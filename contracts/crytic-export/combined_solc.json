{"sources": {"/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/access/Ownable.sol": {"AST": {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/access/Ownable.sol", "exportedSymbols": {"Context": [835], "Ownable": [245]}, "id": 246, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 134, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "102:23:0"}, {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Context.sol", "file": "../utils/Context.sol", "id": 135, "nodeType": "ImportDirective", "scope": 246, "sourceUnit": 836, "src": "127:30:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": true, "baseContracts": [{"baseName": {"id": 137, "name": "Context", "nodeType": "IdentifierPath", "referencedDeclaration": 835, "src": "683:7:0"}, "id": 138, "nodeType": "InheritanceSpecifier", "src": "683:7:0"}], "contractDependencies": [835], "contractKind": "contract", "documentation": {"id": 136, "nodeType": "StructuredDocumentation", "src": "159:494:0", "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."}, "fullyImplemented": true, "id": 245, "linearizedBaseContracts": [245, 835], "name": "Ownable", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 140, "mutability": "mutable", "name": "_owner", "nodeType": "VariableDeclaration", "scope": 245, "src": "697:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 139, "name": "address", "nodeType": "ElementaryTypeName", "src": "697:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"anonymous": false, "id": 146, "name": "OwnershipTransferred", "nodeType": "EventDefinition", "parameters": {"id": 145, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 142, "indexed": true, "mutability": "mutable", "name": "previousOwner", "nodeType": "VariableDeclaration", "scope": 146, "src": "753:29:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 141, "name": "address", "nodeType": "ElementaryTypeName", "src": "753:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 144, "indexed": true, "mutability": "mutable", "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 146, "src": "784:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 143, "name": "address", "nodeType": "ElementaryTypeName", "src": "784:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "752:57:0"}, "src": "726:84:0"}, {"body": {"id": 155, "nodeType": "Block", "src": "926:49:0", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 151, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "955:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "955:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 150, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "936:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 153, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "936:32:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 154, "nodeType": "ExpressionStatement", "src": "936:32:0"}]}, "documentation": {"id": 147, "nodeType": "StructuredDocumentation", "src": "816:91:0", "text": " @dev Initializes the contract setting the deployer as the initial owner."}, "id": 156, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 148, "nodeType": "ParameterList", "parameters": [], "src": "923:2:0"}, "returnParameters": {"id": 149, "nodeType": "ParameterList", "parameters": [], "src": "926:0:0"}, "scope": 245, "src": "912:63:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 163, "nodeType": "Block", "src": "1084:41:0", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 159, "name": "_checkOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 187, "src": "1094:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 160, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1094:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 161, "nodeType": "ExpressionStatement", "src": "1094:13:0"}, {"id": 162, "nodeType": "PlaceholderStatement", "src": "1117:1:0"}]}, "documentation": {"id": 157, "nodeType": "StructuredDocumentation", "src": "981:77:0", "text": " @dev Throws if called by any account other than the owner."}, "id": 164, "name": "onlyOwner", "nodeType": "ModifierDefinition", "parameters": {"id": 158, "nodeType": "ParameterList", "parameters": [], "src": "1081:2:0"}, "src": "1063:62:0", "virtual": false, "visibility": "internal"}, {"body": {"id": 172, "nodeType": "Block", "src": "1256:30:0", "statements": [{"expression": {"id": 170, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "1273:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 169, "id": 171, "nodeType": "Return", "src": "1266:13:0"}]}, "documentation": {"id": 165, "nodeType": "StructuredDocumentation", "src": "1131:65:0", "text": " @dev Returns the address of the current owner."}, "functionSelector": "8da5cb5b", "id": 173, "implemented": true, "kind": "function", "modifiers": [], "name": "owner", "nodeType": "FunctionDefinition", "parameters": {"id": 166, "nodeType": "ParameterList", "parameters": [], "src": "1215:2:0"}, "returnParameters": {"id": 169, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 168, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 173, "src": "1247:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 167, "name": "address", "nodeType": "ElementaryTypeName", "src": "1247:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1246:9:0"}, "scope": 245, "src": "1201:85:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 186, "nodeType": "Block", "src": "1404:85:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 178, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 173, "src": "1422:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 179, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1422:7:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 180, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "1433:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1433:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1422:23:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572", "id": 183, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1447:34:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}, "value": "Ownable: caller is not the owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}], "id": 177, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1414:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 184, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1414:68:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 185, "nodeType": "ExpressionStatement", "src": "1414:68:0"}]}, "documentation": {"id": 174, "nodeType": "StructuredDocumentation", "src": "1292:62:0", "text": " @dev Throws if the sender is not the owner."}, "id": 187, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOwner", "nodeType": "FunctionDefinition", "parameters": {"id": 175, "nodeType": "ParameterList", "parameters": [], "src": "1379:2:0"}, "returnParameters": {"id": 176, "nodeType": "ParameterList", "parameters": [], "src": "1404:0:0"}, "scope": 245, "src": "1359:130:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 200, "nodeType": "Block", "src": "1885:47:0", "statements": [{"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 196, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1922:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 195, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1914:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 194, "name": "address", "nodeType": "ElementaryTypeName", "src": "1914:7:0", "typeDescriptions": {}}}, "id": 197, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1914:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 193, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "1895:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1895:30:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 199, "nodeType": "ExpressionStatement", "src": "1895:30:0"}]}, "documentation": {"id": 188, "nodeType": "StructuredDocumentation", "src": "1495:331:0", "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."}, "functionSelector": "715018a6", "id": 201, "implemented": true, "kind": "function", "modifiers": [{"id": 191, "modifierName": {"id": 190, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 164, "src": "1875:9:0"}, "nodeType": "ModifierInvocation", "src": "1875:9:0"}], "name": "renounceOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 189, "nodeType": "ParameterList", "parameters": [], "src": "1857:2:0"}, "returnParameters": {"id": 192, "nodeType": "ParameterList", "parameters": [], "src": "1885:0:0"}, "scope": 245, "src": "1831:101:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 223, "nodeType": "Block", "src": "2151:128:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 210, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "2169:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 213, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2189:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 212, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2181:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 211, "name": "address", "nodeType": "ElementaryTypeName", "src": "2181:7:0", "typeDescriptions": {}}}, "id": 214, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2181:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2169:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373", "id": 216, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2193:40:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}, "value": "Ownable: new owner is the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}], "id": 209, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2161:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 217, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2161:73:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 218, "nodeType": "ExpressionStatement", "src": "2161:73:0"}, {"expression": {"arguments": [{"id": 220, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "2263:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 219, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "2244:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2244:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 222, "nodeType": "ExpressionStatement", "src": "2244:28:0"}]}, "documentation": {"id": 202, "nodeType": "StructuredDocumentation", "src": "1938:138:0", "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."}, "functionSelector": "f2fde38b", "id": 224, "implemented": true, "kind": "function", "modifiers": [{"id": 207, "modifierName": {"id": 206, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 164, "src": "2141:9:0"}, "nodeType": "ModifierInvocation", "src": "2141:9:0"}], "name": "transferOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 205, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 204, "mutability": "mutable", "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 224, "src": "2108:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 203, "name": "address", "nodeType": "ElementaryTypeName", "src": "2108:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2107:18:0"}, "returnParameters": {"id": 208, "nodeType": "ParameterList", "parameters": [], "src": "2151:0:0"}, "scope": 245, "src": "2081:198:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 243, "nodeType": "Block", "src": "2496:124:0", "statements": [{"assignments": [231], "declarations": [{"constant": false, "id": 231, "mutability": "mutable", "name": "oldOwner", "nodeType": "VariableDeclaration", "scope": 243, "src": "2506:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 230, "name": "address", "nodeType": "ElementaryTypeName", "src": "2506:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 233, "initialValue": {"id": 232, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "2525:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2506:25:0"}, {"expression": {"id": 236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 234, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "2541:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 235, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 227, "src": "2550:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2541:17:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 237, "nodeType": "ExpressionStatement", "src": "2541:17:0"}, {"eventCall": {"arguments": [{"id": 239, "name": "oldOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "2594:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 240, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 227, "src": "2604:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 238, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "2573:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2573:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 242, "nodeType": "EmitStatement", "src": "2568:45:0"}]}, "documentation": {"id": 225, "nodeType": "StructuredDocumentation", "src": "2285:143:0", "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."}, "id": 244, "implemented": true, "kind": "function", "modifiers": [], "name": "_transferOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 228, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 227, "mutability": "mutable", "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 244, "src": "2461:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 226, "name": "address", "nodeType": "ElementaryTypeName", "src": "2461:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2460:18:0"}, "returnParameters": {"id": 229, "nodeType": "ParameterList", "parameters": [], "src": "2496:0:0"}, "scope": 245, "src": "2433:187:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 246, "src": "654:1968:0"}], "src": "102:2521:0"}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Context.sol": {"AST": {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Context.sol", "exportedSymbols": {"Context": [835]}, "id": 836, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 815, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "86:23:1"}, {"abstract": true, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 816, "nodeType": "StructuredDocumentation", "src": "111:496:1", "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."}, "fullyImplemented": true, "id": 835, "linearizedBaseContracts": [835], "name": "Context", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 824, "nodeType": "Block", "src": "702:34:1", "statements": [{"expression": {"expression": {"id": 821, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "719:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 822, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "719:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 820, "id": 823, "nodeType": "Return", "src": "712:17:1"}]}, "id": 825, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nodeType": "FunctionDefinition", "parameters": {"id": 817, "nodeType": "ParameterList", "parameters": [], "src": "659:2:1"}, "returnParameters": {"id": 820, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 819, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 825, "src": "693:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 818, "name": "address", "nodeType": "ElementaryTypeName", "src": "693:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "692:9:1"}, "scope": 835, "src": "640:96:1", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 833, "nodeType": "Block", "src": "809:32:1", "statements": [{"expression": {"expression": {"id": 830, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "826:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 831, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "src": "826:8:1", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 829, "id": 832, "nodeType": "Return", "src": "819:15:1"}]}, "id": 834, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nodeType": "FunctionDefinition", "parameters": {"id": 826, "nodeType": "ParameterList", "parameters": [], "src": "759:2:1"}, "returnParameters": {"id": 829, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 828, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 834, "src": "793:14:1", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 827, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "793:5:1", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "792:16:1"}, "scope": 835, "src": "742:99:1", "stateMutability": "view", "virtual": true, "visibility": "internal"}], "scope": 836, "src": "608:235:1"}], "src": "86:758:1"}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Counters.sol": {"AST": {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Counters.sol", "exportedSymbols": {"Counters": [319]}, "id": 320, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 247, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "87:23:2"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": {"id": 248, "nodeType": "StructuredDocumentation", "src": "112:311:2", "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"}, "fullyImplemented": true, "id": 319, "linearizedBaseContracts": [319], "name": "Counters", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "Counters.Counter", "id": 251, "members": [{"constant": false, "id": 250, "mutability": "mutable", "name": "_value", "nodeType": "VariableDeclaration", "scope": 251, "src": "786:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 249, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "786:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Counter", "nodeType": "StructDefinition", "scope": 319, "src": "447:374:2", "visibility": "public"}, {"body": {"id": 262, "nodeType": "Block", "src": "901:38:2", "statements": [{"expression": {"expression": {"id": 259, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "918:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 260, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 250, "src": "918:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 258, "id": 261, "nodeType": "Return", "src": "911:21:2"}]}, "id": 263, "implemented": true, "kind": "function", "modifiers": [], "name": "current", "nodeType": "FunctionDefinition", "parameters": {"id": 255, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 254, "mutability": "mutable", "name": "counter", "nodeType": "VariableDeclaration", "scope": 263, "src": "844:23:2", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"id": 253, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 252, "name": "Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 251, "src": "844:7:2"}, "referencedDeclaration": 251, "src": "844:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "internal"}], "src": "843:25:2"}, "returnParameters": {"id": 258, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 257, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 263, "src": "892:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 256, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "892:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "891:9:2"}, "scope": 319, "src": "827:112:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 276, "nodeType": "Block", "src": "998:70:2", "statements": [{"id": 275, "nodeType": "UncheckedBlock", "src": "1008:54:2", "statements": [{"expression": {"id": 273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 269, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 266, "src": "1032:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 271, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 250, "src": "1032:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1050:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "1032:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 274, "nodeType": "ExpressionStatement", "src": "1032:19:2"}]}]}, "id": 277, "implemented": true, "kind": "function", "modifiers": [], "name": "increment", "nodeType": "FunctionDefinition", "parameters": {"id": 267, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 266, "mutability": "mutable", "name": "counter", "nodeType": "VariableDeclaration", "scope": 277, "src": "964:23:2", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"id": 265, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 264, "name": "Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 251, "src": "964:7:2"}, "referencedDeclaration": 251, "src": "964:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "internal"}], "src": "963:25:2"}, "returnParameters": {"id": 268, "nodeType": "ParameterList", "parameters": [], "src": "998:0:2"}, "scope": 319, "src": "945:123:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 304, "nodeType": "Block", "src": "1127:176:2", "statements": [{"assignments": [284], "declarations": [{"constant": false, "id": 284, "mutability": "mutable", "name": "value", "nodeType": "VariableDeclaration", "scope": 304, "src": "1137:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 283, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1137:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 287, "initialValue": {"expression": {"id": 285, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 280, "src": "1153:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 286, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 250, "src": "1153:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1137:30:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 291, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 289, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 284, "src": "1185:5:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 290, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1193:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1185:9:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77", "id": 292, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1196:29:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f", "typeString": "literal_string \"Counter: decrement overflow\""}, "value": "Counter: decrement overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f", "typeString": "literal_string \"Counter: decrement overflow\""}], "id": 288, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1177:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 293, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1177:49:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 294, "nodeType": "ExpressionStatement", "src": "1177:49:2"}, {"id": 303, "nodeType": "UncheckedBlock", "src": "1236:61:2", "statements": [{"expression": {"id": 301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 295, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 280, "src": "1260:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 297, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 250, "src": "1260:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 298, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 284, "src": "1277:5:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1285:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "1277:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1260:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 302, "nodeType": "ExpressionStatement", "src": "1260:26:2"}]}]}, "id": 305, "implemented": true, "kind": "function", "modifiers": [], "name": "decrement", "nodeType": "FunctionDefinition", "parameters": {"id": 281, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 280, "mutability": "mutable", "name": "counter", "nodeType": "VariableDeclaration", "scope": 305, "src": "1093:23:2", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"id": 279, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 278, "name": "Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 251, "src": "1093:7:2"}, "referencedDeclaration": 251, "src": "1093:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "internal"}], "src": "1092:25:2"}, "returnParameters": {"id": 282, "nodeType": "ParameterList", "parameters": [], "src": "1127:0:2"}, "scope": 319, "src": "1074:229:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 317, "nodeType": "Block", "src": "1358:35:2", "statements": [{"expression": {"id": 315, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 311, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 308, "src": "1368:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 313, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 250, "src": "1368:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 314, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1385:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1368:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 316, "nodeType": "ExpressionStatement", "src": "1368:18:2"}]}, "id": 318, "implemented": true, "kind": "function", "modifiers": [], "name": "reset", "nodeType": "FunctionDefinition", "parameters": {"id": 309, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 308, "mutability": "mutable", "name": "counter", "nodeType": "VariableDeclaration", "scope": 318, "src": "1324:23:2", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"id": 307, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 306, "name": "Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 251, "src": "1324:7:2"}, "referencedDeclaration": 251, "src": "1324:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$251_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "internal"}], "src": "1323:25:2"}, "returnParameters": {"id": 310, "nodeType": "ParameterList", "parameters": [], "src": "1358:0:2"}, "scope": 319, "src": "1309:84:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 320, "src": "424:971:2"}], "src": "87:1309:2"}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/IGame.sol": {"AST": {"absolutePath": "IGame.sol", "exportedSymbols": {"IGame": [370]}, "id": 371, "license": "SEE LICENSE IN LICENSE", "nodeType": "SourceUnit", "nodes": [{"id": 321, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "51:23:3"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 322, "nodeType": "StructuredDocumentation", "src": "76:305:3", "text": " @dev Interface of a Game standard \n \n Note: The interface is made for composability\n meaning that it should be possible to implment a wide range\n of game contracts, with different rules and logic\n \n Implementation: Reccomend using state variables to keep track of the game state\n "}, "fullyImplemented": false, "id": 370, "linearizedBaseContracts": [370], "name": "IGame", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": {"id": 323, "nodeType": "StructuredDocumentation", "src": "406:72:3", "text": " \n @dev Emitted when a game is generated\n "}, "id": 325, "name": "GameCreated", "nodeType": "EventDefinition", "parameters": {"id": 324, "nodeType": "ParameterList", "parameters": [], "src": "500:2:3"}, "src": "483:20:3"}, {"anonymous": false, "documentation": {"id": 326, "nodeType": "StructuredDocumentation", "src": "509:70:3", "text": " \n @dev Emitted when a game is started\n "}, "id": 328, "name": "GameBegun", "nodeType": "EventDefinition", "parameters": {"id": 327, "nodeType": "ParameterList", "parameters": [], "src": "599:2:3"}, "src": "584:18:3"}, {"anonymous": false, "documentation": {"id": 329, "nodeType": "StructuredDocumentation", "src": "608:68:3", "text": " \n @dev Emitted when a game is ended\n "}, "id": 331, "name": "GameFinished", "nodeType": "EventDefinition", "parameters": {"id": 330, "nodeType": "ParameterList", "parameters": [], "src": "699:2:3"}, "src": "681:21:3"}, {"documentation": {"id": 332, "nodeType": "StructuredDocumentation", "src": "708:86:3", "text": " \n @dev Return the total number of players in the game\n "}, "functionSelector": "4529cae7", "id": 337, "implemented": false, "kind": "function", "modifiers": [], "name": "getTotalPlayers", "nodeType": "FunctionDefinition", "parameters": {"id": 333, "nodeType": "ParameterList", "parameters": [], "src": "823:2:3"}, "returnParameters": {"id": 336, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 335, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 337, "src": "849:6:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 334, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "849:6:3", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "src": "848:8:3"}, "scope": 370, "src": "799:58:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 338, "nodeType": "StructuredDocumentation", "src": "867:102:3", "text": " \n @dev Returns a boolean that dictates if the game hasn't started yet\n "}, "functionSelector": "2e547407", "id": 343, "implemented": false, "kind": "function", "modifiers": [], "name": "isPregame", "nodeType": "FunctionDefinition", "parameters": {"id": 339, "nodeType": "ParameterList", "parameters": [], "src": "992:2:3"}, "returnParameters": {"id": 342, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 341, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 343, "src": "1018:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 340, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1018:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1017:6:3"}, "scope": 370, "src": "974:50:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 344, "nodeType": "StructuredDocumentation", "src": "1030:104:3", "text": " \n @dev Returns a boolean that dictates if the game is currently ongoing\n "}, "functionSelector": "3e0881a9", "id": 349, "implemented": false, "kind": "function", "modifiers": [], "name": "isOngoing", "nodeType": "FunctionDefinition", "parameters": {"id": 345, "nodeType": "ParameterList", "parameters": [], "src": "1157:2:3"}, "returnParameters": {"id": 348, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 347, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 349, "src": "1183:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 346, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1183:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1182:6:3"}, "scope": 370, "src": "1139:50:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 350, "nodeType": "StructuredDocumentation", "src": "1195:93:3", "text": " \n @dev Returns a boolean that dictates if the game has ended\n "}, "functionSelector": "7b352962", "id": 355, "implemented": false, "kind": "function", "modifiers": [], "name": "isFinished", "nodeType": "FunctionDefinition", "parameters": {"id": 351, "nodeType": "ParameterList", "parameters": [], "src": "1312:2:3"}, "returnParameters": {"id": 354, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 353, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 355, "src": "1338:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 352, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1338:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1337:6:3"}, "scope": 370, "src": "1293:51:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 356, "nodeType": "StructuredDocumentation", "src": "1354:89:3", "text": " \n @dev Returns the address of the current winner\n \n "}, "functionSelector": "8e7ea5b2", "id": 361, "implemented": false, "kind": "function", "modifiers": [], "name": "getWinner", "nodeType": "FunctionDefinition", "parameters": {"id": 357, "nodeType": "ParameterList", "parameters": [], "src": "1466:2:3"}, "returnParameters": {"id": 360, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 359, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 361, "src": "1492:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 358, "name": "address", "nodeType": "ElementaryTypeName", "src": "1492:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1491:17:3"}, "scope": 370, "src": "1448:61:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 362, "nodeType": "StructuredDocumentation", "src": "1515:168:3", "text": " \n @dev Returns a boolean that dictates if the account is a player in the game\n \n @param account The address of the account to check"}, "functionSelector": "09c95e10", "id": 369, "implemented": false, "kind": "function", "modifiers": [], "name": "isPlayer", "nodeType": "FunctionDefinition", "parameters": {"id": 365, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 364, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 369, "src": "1706:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 363, "name": "address", "nodeType": "ElementaryTypeName", "src": "1706:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1705:17:3"}, "returnParameters": {"id": 368, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 367, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 369, "src": "1746:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 366, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1746:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1745:6:3"}, "scope": 370, "src": "1688:64:3", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 371, "src": "383:1371:3"}], "src": "51:1704:3"}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/Race.sol": {"AST": {"absolutePath": "Race.sol", "exportedSymbols": {"Context": [835], "Counters": [319], "IGame": [370], "Ownable": [245], "Race": [813]}, "id": 814, "license": "SEE LICENSE IN LICENSE", "nodeType": "SourceUnit", "nodes": [{"id": 372, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "51:23:4"}, {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 373, "nodeType": "ImportDirective", "scope": 814, "sourceUnit": 246, "src": "104:52:4", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Counters.sol", "file": "@openzeppelin/contracts/utils/Counters.sol", "id": 374, "nodeType": "ImportDirective", "scope": 814, "sourceUnit": 320, "src": "175:52:4", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "IGame.sol", "file": "./IGame.sol", "id": 375, "nodeType": "ImportDirective", "scope": 814, "sourceUnit": 371, "src": "243:21:4", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 376, "name": "IGame", "nodeType": "IdentifierPath", "referencedDeclaration": 370, "src": "283:5:4"}, "id": 377, "nodeType": "InheritanceSpecifier", "src": "283:5:4"}, {"baseName": {"id": 378, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 245, "src": "290:7:4"}, "id": 379, "nodeType": "InheritanceSpecifier", "src": "290:7:4"}], "contractDependencies": [245, 370, 835], "contractKind": "contract", "fullyImplemented": true, "id": 813, "linearizedBaseContracts": [813, 245, 835, 370], "name": "Race", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "Race.Player", "id": 388, "members": [{"constant": false, "id": 381, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 388, "src": "328:11:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 380, "name": "string", "nodeType": "ElementaryTypeName", "src": "328:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 383, "mutability": "mutable", "name": "coins", "nodeType": "VariableDeclaration", "scope": 388, "src": "349:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 382, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "349:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 385, "mutability": "mutable", "name": "distance", "nodeType": "VariableDeclaration", "scope": 388, "src": "372:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 384, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "372:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 387, "mutability": "mutable", "name": "isPlayer", "nodeType": "VariableDeclaration", "scope": 388, "src": "398:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 386, "name": "bool", "nodeType": "ElementaryTypeName", "src": "398:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "Player", "nodeType": "StructDefinition", "scope": 813, "src": "304:114:4", "visibility": "public"}, {"constant": false, "functionSelector": "e2eb41ff", "id": 393, "mutability": "mutable", "name": "players", "nodeType": "VariableDeclaration", "scope": 813, "src": "424:41:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player)"}, "typeName": {"id": 392, "keyType": {"id": 389, "name": "address", "nodeType": "ElementaryTypeName", "src": "432:7:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "424:26:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player)"}, "valueType": {"id": 391, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 390, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "443:6:4"}, "referencedDeclaration": 388, "src": "443:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}}, "visibility": "public"}, {"canonicalName": "Race.State", "id": 397, "members": [{"id": 394, "name": "PREGAME", "nodeType": "EnumValue", "src": "493:7:4"}, {"id": 395, "name": "ONGOING", "nodeType": "EnumValue", "src": "510:7:4"}, {"id": 396, "name": "ENDED", "nodeType": "EnumValue", "src": "527:5:4"}], "name": "State", "nodeType": "EnumDefinition", "src": "472:66:4"}, {"constant": false, "id": 400, "mutability": "mutable", "name": "gameState", "nodeType": "VariableDeclaration", "scope": 813, "src": "544:15:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "typeName": {"id": 399, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 398, "name": "State", "nodeType": "IdentifierPath", "referencedDeclaration": 397, "src": "544:5:4"}, "referencedDeclaration": 397, "src": "544:5:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "visibility": "internal"}, {"constant": false, "id": 402, "mutability": "mutable", "name": "raceId", "nodeType": "VariableDeclaration", "scope": 813, "src": "565:13:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 401, "name": "string", "nodeType": "ElementaryTypeName", "src": "565:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 404, "mutability": "mutable", "name": "currWinnerAddr", "nodeType": "VariableDeclaration", "scope": 813, "src": "584:22:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 403, "name": "address", "nodeType": "ElementaryTypeName", "src": "584:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"body": {"id": 494, "nodeType": "Block", "src": "845:464:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 429, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 424, "name": "addr1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "876:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 427, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "893:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 426, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "885:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 425, "name": "address", "nodeType": "ElementaryTypeName", "src": "885:7:4", "typeDescriptions": {}}}, "id": 428, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "885:10:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "876:19:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 435, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 430, "name": "addr2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 412, "src": "915:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 433, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "932:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 432, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "924:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 431, "name": "address", "nodeType": "ElementaryTypeName", "src": "924:7:4", "typeDescriptions": {}}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "924:10:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "915:19:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "876:58:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 442, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 437, "name": "addr3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 416, "src": "954:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 440, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "971:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 439, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "963:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 438, "name": "address", "nodeType": "ElementaryTypeName", "src": "963:7:4", "typeDescriptions": {}}}, "id": 441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "963:10:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "954:19:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "876:97:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 444, "name": "initCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 420, "src": "993:9:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 445, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1006:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "993:14:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "876:131:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 423, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "855:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "855:162:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 449, "nodeType": "ExpressionStatement", "src": "855:162:4"}, {"expression": {"id": 452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 450, "name": "raceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "1028:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 451, "name": "_raceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 406, "src": "1037:7:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1028:16:4", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 453, "nodeType": "ExpressionStatement", "src": "1028:16:4"}, {"expression": {"id": 461, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 454, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "1054:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 456, "indexExpression": {"id": 455, "name": "addr1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "1062:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1054:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 458, "name": "name1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 410, "src": "1082:5:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 459, "name": "initCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 420, "src": "1089:9:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 457, "name": "makePlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "1071:10:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Player_$388_memory_ptr_$", "typeString": "function (string memory,uint256) pure returns (struct Race.Player memory)"}}, "id": 460, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1071:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "src": "1054:45:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "id": 462, "nodeType": "ExpressionStatement", "src": "1054:45:4"}, {"expression": {"id": 470, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 463, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "1109:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 465, "indexExpression": {"id": 464, "name": "addr2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 412, "src": "1117:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1109:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 467, "name": "name2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 414, "src": "1137:5:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 468, "name": "initCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 420, "src": "1144:9:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 466, "name": "makePlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "1126:10:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Player_$388_memory_ptr_$", "typeString": "function (string memory,uint256) pure returns (struct Race.Player memory)"}}, "id": 469, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1126:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "src": "1109:45:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "id": 471, "nodeType": "ExpressionStatement", "src": "1109:45:4"}, {"expression": {"id": 479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 472, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "1164:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 474, "indexExpression": {"id": 473, "name": "addr3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 416, "src": "1172:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1164:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 476, "name": "name3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 418, "src": "1192:5:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 477, "name": "initCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 420, "src": "1199:9:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 475, "name": "makePlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "1181:10:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Player_$388_memory_ptr_$", "typeString": "function (string memory,uint256) pure returns (struct Race.Player memory)"}}, "id": 478, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1181:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "src": "1164:45:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "id": 480, "nodeType": "ExpressionStatement", "src": "1164:45:4"}, {"expression": {"id": 483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 481, "name": "currWinnerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 404, "src": "1220:14:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 482, "name": "addr1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "1237:5:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1220:22:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 484, "nodeType": "ExpressionStatement", "src": "1220:22:4"}, {"expression": {"id": 489, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 485, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "1253:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 487, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1271:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 486, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "1265:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 488, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1265:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "1253:20:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "id": 490, "nodeType": "ExpressionStatement", "src": "1253:20:4"}, {"eventCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 491, "name": "GameCreated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 325, "src": "1289:11:4", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 492, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1289:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 493, "nodeType": "EmitStatement", "src": "1284:18:4"}]}, "id": 495, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 421, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 406, "mutability": "mutable", "name": "_raceId", "nodeType": "VariableDeclaration", "scope": 495, "src": "634:21:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 405, "name": "string", "nodeType": "ElementaryTypeName", "src": "634:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 408, "mutability": "mutable", "name": "addr1", "nodeType": "VariableDeclaration", "scope": 495, "src": "665:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 407, "name": "address", "nodeType": "ElementaryTypeName", "src": "665:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 410, "mutability": "mutable", "name": "name1", "nodeType": "VariableDeclaration", "scope": 495, "src": "688:19:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 409, "name": "string", "nodeType": "ElementaryTypeName", "src": "688:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 412, "mutability": "mutable", "name": "addr2", "nodeType": "VariableDeclaration", "scope": 495, "src": "717:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 411, "name": "address", "nodeType": "ElementaryTypeName", "src": "717:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 414, "mutability": "mutable", "name": "name2", "nodeType": "VariableDeclaration", "scope": 495, "src": "740:19:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 413, "name": "string", "nodeType": "ElementaryTypeName", "src": "740:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 416, "mutability": "mutable", "name": "addr3", "nodeType": "VariableDeclaration", "scope": 495, "src": "769:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 415, "name": "address", "nodeType": "ElementaryTypeName", "src": "769:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 418, "mutability": "mutable", "name": "name3", "nodeType": "VariableDeclaration", "scope": 495, "src": "792:19:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 417, "name": "string", "nodeType": "ElementaryTypeName", "src": "792:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 420, "mutability": "mutable", "name": "initCoins", "nodeType": "VariableDeclaration", "scope": 495, "src": "821:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 419, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "821:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "624:220:4"}, "returnParameters": {"id": 422, "nodeType": "ParameterList", "parameters": [], "src": "845:0:4"}, "scope": 813, "src": "613:696:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 512, "nodeType": "Block", "src": "1462:52:4", "statements": [{"expression": {"arguments": [{"id": 506, "name": "name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 497, "src": "1486:4:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 507, "name": "coins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 499, "src": "1492:5:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "30", "id": 508, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1499:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "74727565", "id": 509, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1502:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 505, "name": "Player", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "1479:6:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Player_$388_storage_ptr_$", "typeString": "type(struct Race.Player storage pointer)"}}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1479:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "functionReturnParameters": 504, "id": 511, "nodeType": "Return", "src": "1472:35:4"}]}, "id": 513, "implemented": true, "kind": "function", "modifiers": [], "name": "makePlayer", "nodeType": "FunctionDefinition", "parameters": {"id": 500, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 497, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 513, "src": "1362:18:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 496, "name": "string", "nodeType": "ElementaryTypeName", "src": "1362:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 499, "mutability": "mutable", "name": "coins", "nodeType": "VariableDeclaration", "scope": 513, "src": "1382:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1382:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1361:35:4"}, "returnParameters": {"id": 504, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 503, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 513, "src": "1443:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 502, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 501, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "1443:6:4"}, "referencedDeclaration": 388, "src": "1443:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "src": "1442:15:4"}, "scope": 813, "src": "1342:172:4", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 524, "nodeType": "Block", "src": "1577:58:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "id": 520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 516, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "1595:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 518, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1614:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 517, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "1608:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 519, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1608:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "1595:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 515, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1587:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1587:30:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 522, "nodeType": "ExpressionStatement", "src": "1587:30:4"}, {"id": 523, "nodeType": "PlaceholderStatement", "src": "1627:1:4"}]}, "id": 525, "name": "pregame", "nodeType": "ModifierDefinition", "parameters": {"id": 514, "nodeType": "ParameterList", "parameters": [], "src": "1574:2:4"}, "src": "1558:77:4", "virtual": false, "visibility": "internal"}, {"body": {"id": 536, "nodeType": "Block", "src": "1659:58:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "id": 532, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 528, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "1677:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "31", "id": 530, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1696:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 529, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "1690:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 531, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1690:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "1677:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 527, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1669:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 533, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1669:30:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 534, "nodeType": "ExpressionStatement", "src": "1669:30:4"}, {"id": 535, "nodeType": "PlaceholderStatement", "src": "1709:1:4"}]}, "id": 537, "name": "ongoing", "nodeType": "ModifierDefinition", "parameters": {"id": 526, "nodeType": "ParameterList", "parameters": [], "src": "1656:2:4"}, "src": "1640:77:4", "virtual": false, "visibility": "internal"}, {"body": {"id": 548, "nodeType": "Block", "src": "1743:58:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "id": 544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 540, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "1761:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "32", "id": 542, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1780:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 541, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "1774:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 543, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1774:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "1761:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 539, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1753:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 545, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1753:30:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 546, "nodeType": "ExpressionStatement", "src": "1753:30:4"}, {"id": 547, "nodeType": "PlaceholderStatement", "src": "1793:1:4"}]}, "id": 549, "name": "finished", "nodeType": "ModifierDefinition", "parameters": {"id": 538, "nodeType": "ParameterList", "parameters": [], "src": "1740:2:4"}, "src": "1723:78:4", "virtual": false, "visibility": "internal"}, {"baseFunctions": [343], "body": {"id": 561, "nodeType": "Block", "src": "1909:45:4", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 555, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "1926:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 557, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1945:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 556, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "1939:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 558, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1939:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "1926:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 554, "id": 560, "nodeType": "Return", "src": "1919:28:4"}]}, "functionSelector": "2e547407", "id": 562, "implemented": true, "kind": "function", "modifiers": [], "name": "isPregame", "nodeType": "FunctionDefinition", "overrides": {"id": 551, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1885:8:4"}, "parameters": {"id": 550, "nodeType": "ParameterList", "parameters": [], "src": "1868:2:4"}, "returnParameters": {"id": 554, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 553, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 562, "src": "1903:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 552, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1903:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1902:6:4"}, "scope": 813, "src": "1850:104:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [349], "body": {"id": 574, "nodeType": "Block", "src": "2019:45:4", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "id": 572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 568, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "2036:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "31", "id": 570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2055:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 569, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "2049:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2049:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "2036:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 567, "id": 573, "nodeType": "Return", "src": "2029:28:4"}]}, "functionSelector": "3e0881a9", "id": 575, "implemented": true, "kind": "function", "modifiers": [], "name": "isOngoing", "nodeType": "FunctionDefinition", "overrides": {"id": 564, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1995:8:4"}, "parameters": {"id": 563, "nodeType": "ParameterList", "parameters": [], "src": "1978:2:4"}, "returnParameters": {"id": 567, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 566, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 575, "src": "2013:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 565, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2013:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2012:6:4"}, "scope": 813, "src": "1960:104:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [355], "body": {"id": 587, "nodeType": "Block", "src": "2130:45:4", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}, "id": 585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 581, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "2147:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "32", "id": 583, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2166:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 582, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "2160:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 584, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2160:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "2147:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 580, "id": 586, "nodeType": "Return", "src": "2140:28:4"}]}, "functionSelector": "7b352962", "id": 588, "implemented": true, "kind": "function", "modifiers": [], "name": "isFinished", "nodeType": "FunctionDefinition", "overrides": {"id": 577, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2106:8:4"}, "parameters": {"id": 576, "nodeType": "ParameterList", "parameters": [], "src": "2089:2:4"}, "returnParameters": {"id": 580, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 579, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 588, "src": "2124:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 578, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2124:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2123:6:4"}, "scope": 813, "src": "2070:105:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 604, "nodeType": "Block", "src": "2253:63:4", "statements": [{"expression": {"id": 599, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 595, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "2263:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "31", "id": 597, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2281:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 596, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "2275:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 598, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2275:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "2263:20:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "id": 600, "nodeType": "ExpressionStatement", "src": "2263:20:4"}, {"eventCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 601, "name": "GameBegun", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "2298:9:4", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2298:11:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 603, "nodeType": "EmitStatement", "src": "2293:16:4"}]}, "functionSelector": "d65ab5f2", "id": 605, "implemented": true, "kind": "function", "modifiers": [{"id": 591, "modifierName": {"id": 590, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 164, "src": "2235:9:4"}, "nodeType": "ModifierInvocation", "src": "2235:9:4"}, {"id": 593, "modifierName": {"id": 592, "name": "pregame", "nodeType": "IdentifierPath", "referencedDeclaration": 525, "src": "2245:7:4"}, "nodeType": "ModifierInvocation", "src": "2245:7:4"}], "name": "startGame", "nodeType": "FunctionDefinition", "parameters": {"id": 589, "nodeType": "ParameterList", "parameters": [], "src": "2225:2:4"}, "returnParameters": {"id": 594, "nodeType": "ParameterList", "parameters": [], "src": "2253:0:4"}, "scope": 813, "src": "2207:109:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 621, "nodeType": "Block", "src": "2366:66:4", "statements": [{"expression": {"id": 616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 612, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "2376:9:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 614, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2394:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 613, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "2388:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$397_$", "typeString": "type(enum Race.State)"}}, "id": 615, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2388:8:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "src": "2376:20:4", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$397", "typeString": "enum Race.State"}}, "id": 617, "nodeType": "ExpressionStatement", "src": "2376:20:4"}, {"eventCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 618, "name": "GameFinished", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 331, "src": "2411:12:4", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2411:14:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 620, "nodeType": "EmitStatement", "src": "2406:19:4"}]}, "functionSelector": "6cbc2ded", "id": 622, "implemented": true, "kind": "function", "modifiers": [{"id": 608, "modifierName": {"id": 607, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 164, "src": "2348:9:4"}, "nodeType": "ModifierInvocation", "src": "2348:9:4"}, {"id": 610, "modifierName": {"id": 609, "name": "ongoing", "nodeType": "IdentifierPath", "referencedDeclaration": 537, "src": "2358:7:4"}, "nodeType": "ModifierInvocation", "src": "2358:7:4"}], "name": "endGame", "nodeType": "FunctionDefinition", "parameters": {"id": 606, "nodeType": "ParameterList", "parameters": [], "src": "2338:2:4"}, "returnParameters": {"id": 611, "nodeType": "ParameterList", "parameters": [], "src": "2366:0:4"}, "scope": 813, "src": "2322:110:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [337], "body": {"id": 630, "nodeType": "Block", "src": "2505:25:4", "statements": [{"expression": {"hexValue": "33", "id": 628, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2522:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "functionReturnParameters": 627, "id": 629, "nodeType": "Return", "src": "2515:8:4"}]}, "functionSelector": "4529cae7", "id": 631, "implemented": true, "kind": "function", "modifiers": [], "name": "getTotalPlayers", "nodeType": "FunctionDefinition", "overrides": {"id": 624, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2479:8:4"}, "parameters": {"id": 623, "nodeType": "ParameterList", "parameters": [], "src": "2462:2:4"}, "returnParameters": {"id": 627, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 626, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 631, "src": "2497:6:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 625, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "2497:6:4", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "src": "2496:8:4"}, "scope": 813, "src": "2438:92:4", "stateMutability": "pure", "virtual": false, "visibility": "external"}, {"body": {"id": 638, "nodeType": "Block", "src": "2595:30:4", "statements": [{"expression": {"id": 636, "name": "raceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "2612:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 635, "id": 637, "nodeType": "Return", "src": "2605:13:4"}]}, "functionSelector": "878e24a4", "id": 639, "implemented": true, "kind": "function", "modifiers": [], "name": "getRaceId", "nodeType": "FunctionDefinition", "parameters": {"id": 632, "nodeType": "ParameterList", "parameters": [], "src": "2554:2:4"}, "returnParameters": {"id": 635, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 634, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 639, "src": "2580:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 633, "name": "string", "nodeType": "ElementaryTypeName", "src": "2580:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2579:15:4"}, "scope": 813, "src": "2536:89:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 719, "nodeType": "Block", "src": "2966:410:4", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 656, "name": "addr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "2998:4:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 654, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2984:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isPlayer", "nodeType": "MemberAccess", "referencedDeclaration": 747, "src": "2984:13:4", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view external returns (bool)"}}, "id": 657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2984:19:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 653, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2976:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 658, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2976:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 659, "nodeType": "ExpressionStatement", "src": "2976:28:4"}, {"expression": {"arguments": [{"hexValue": "66616c7365", "id": 661, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3021:5:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 660, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "3014:6:4", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 662, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3014:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 663, "nodeType": "ExpressionStatement", "src": "3014:13:4"}, {"assignments": [666], "declarations": [{"constant": false, "id": 666, "mutability": "mutable", "name": "p", "nodeType": "VariableDeclaration", "scope": 719, "src": "3038:15:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 665, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 664, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "3038:6:4"}, "referencedDeclaration": 388, "src": "3038:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "id": 670, "initialValue": {"baseExpression": {"id": 667, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "3056:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 669, "indexExpression": {"id": 668, "name": "addr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "3064:4:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3056:13:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3038:31:4"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 680, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 672, "name": "coins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 644, "src": "3088:5:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 673, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "3097:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 674, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 383, "src": "3097:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3088:16:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 679, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 676, "name": "distance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "3108:8:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 677, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "3120:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 678, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "distance", "nodeType": "MemberAccess", "referencedDeclaration": 385, "src": "3120:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3108:22:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3088:42:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 671, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3080:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 681, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3080:51:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 682, "nodeType": "ExpressionStatement", "src": "3080:51:4"}, {"expression": {"id": 687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 683, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "3142:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 685, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 383, "src": "3142:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 686, "name": "coins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 644, "src": "3152:5:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3142:15:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 688, "nodeType": "ExpressionStatement", "src": "3142:15:4"}, {"expression": {"id": 693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 689, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "3167:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 691, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "distance", "nodeType": "MemberAccess", "referencedDeclaration": 385, "src": "3167:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 692, "name": "distance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "3180:8:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3167:21:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 694, "nodeType": "ExpressionStatement", "src": "3167:21:4"}, {"expression": {"id": 699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 695, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "3198:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 697, "indexExpression": {"id": 696, "name": "addr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "3206:4:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3198:13:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 698, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "3214:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "src": "3198:17:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "id": 700, "nodeType": "ExpressionStatement", "src": "3198:17:4"}, {"assignments": [703], "declarations": [{"constant": false, "id": 703, "mutability": "mutable", "name": "currWinner", "nodeType": "VariableDeclaration", "scope": 719, "src": "3226:24:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 702, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 701, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "3226:6:4"}, "referencedDeclaration": 388, "src": "3226:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "id": 707, "initialValue": {"baseExpression": {"id": 704, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "3253:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 706, "indexExpression": {"id": 705, "name": "currWinnerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 404, "src": "3261:14:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3253:23:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3226:50:4"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 708, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "3290:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 709, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "distance", "nodeType": "MemberAccess", "referencedDeclaration": 385, "src": "3290:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 710, "name": "currWinner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 703, "src": "3303:10:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 711, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "distance", "nodeType": "MemberAccess", "referencedDeclaration": 385, "src": "3303:19:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3290:32:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 718, "nodeType": "IfStatement", "src": "3286:84:4", "trueBody": {"id": 717, "nodeType": "Block", "src": "3324:46:4", "statements": [{"expression": {"id": 715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 713, "name": "currWinnerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 404, "src": "3338:14:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 714, "name": "addr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "3355:4:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3338:21:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 716, "nodeType": "ExpressionStatement", "src": "3338:21:4"}]}}]}, "documentation": {"id": 640, "nodeType": "StructuredDocumentation", "src": "2631:206:4", "text": "if_succeeds {:msg \"Player Coins have Decreased\" } old(players[addr].coins) > players[addr].coins;\n if_succeeds {:msg \"intentionally failing test\" } old(players[addr].coins) < players[addr].coins;"}, "functionSelector": "8ab19a70", "id": 720, "implemented": true, "kind": "function", "modifiers": [{"id": 649, "modifierName": {"id": 648, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 164, "src": "2948:9:4"}, "nodeType": "ModifierInvocation", "src": "2948:9:4"}, {"id": 651, "modifierName": {"id": 650, "name": "ongoing", "nodeType": "IdentifierPath", "referencedDeclaration": 537, "src": "2958:7:4"}, "nodeType": "ModifierInvocation", "src": "2958:7:4"}], "name": "updatePlayer", "nodeType": "FunctionDefinition", "parameters": {"id": 647, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 642, "mutability": "mutable", "name": "addr", "nodeType": "VariableDeclaration", "scope": 720, "src": "2873:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 641, "name": "address", "nodeType": "ElementaryTypeName", "src": "2873:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 644, "mutability": "mutable", "name": "coins", "nodeType": "VariableDeclaration", "scope": 720, "src": "2895:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 643, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2895:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 646, "mutability": "mutable", "name": "distance", "nodeType": "VariableDeclaration", "scope": 720, "src": "2918:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 645, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2918:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2863:77:4"}, "returnParameters": {"id": 652, "nodeType": "ParameterList", "parameters": [], "src": "2966:0:4"}, "scope": 813, "src": "2842:534:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [369], "body": {"id": 746, "nodeType": "Block", "src": "3478:105:4", "statements": [{"assignments": [730], "declarations": [{"constant": false, "id": 730, "mutability": "mutable", "name": "p", "nodeType": "VariableDeclaration", "scope": 746, "src": "3488:15:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 729, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 728, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "3488:6:4"}, "referencedDeclaration": 388, "src": "3488:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "id": 734, "initialValue": {"baseExpression": {"id": 731, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "3506:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 733, "indexExpression": {"id": 732, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "3514:7:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3506:16:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3488:34:4"}, {"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 735, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 730, "src": "3539:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 736, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "isPlayer", "nodeType": "MemberAccess", "referencedDeclaration": 387, "src": "3539:10:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 742, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 737, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "3554:7:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 740, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3573:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 739, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3565:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 738, "name": "address", "nodeType": "ElementaryTypeName", "src": "3565:7:4", "typeDescriptions": {}}}, "id": 741, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3565:10:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3554:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 743, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3553:23:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3539:37:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 727, "id": 745, "nodeType": "Return", "src": "3532:44:4"}]}, "functionSelector": "09c95e10", "id": 747, "implemented": true, "kind": "function", "modifiers": [], "name": "isPlayer", "nodeType": "FunctionDefinition", "overrides": {"id": 724, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3454:8:4"}, "parameters": {"id": 723, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 722, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 747, "src": "3423:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 721, "name": "address", "nodeType": "ElementaryTypeName", "src": "3423:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3422:17:4"}, "returnParameters": {"id": 727, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 726, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 747, "src": "3472:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 725, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3472:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3471:6:4"}, "scope": 813, "src": "3405:178:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [361], "body": {"id": 757, "nodeType": "Block", "src": "3660:38:4", "statements": [{"expression": {"id": 755, "name": "currWinnerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 404, "src": "3677:14:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 754, "id": 756, "nodeType": "Return", "src": "3670:21:4"}]}, "functionSelector": "8e7ea5b2", "id": 758, "implemented": true, "kind": "function", "modifiers": [{"id": 751, "modifierName": {"id": 750, "name": "finished", "nodeType": "IdentifierPath", "referencedDeclaration": 549, "src": "3633:8:4"}, "nodeType": "ModifierInvocation", "src": "3633:8:4"}], "name": "getWinner", "nodeType": "FunctionDefinition", "overrides": {"id": 749, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3624:8:4"}, "parameters": {"id": 748, "nodeType": "ParameterList", "parameters": [], "src": "3607:2:4"}, "returnParameters": {"id": 754, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 753, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 758, "src": "3651:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 752, "name": "address", "nodeType": "ElementaryTypeName", "src": "3651:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3650:9:4"}, "scope": 813, "src": "3589:109:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 775, "nodeType": "Block", "src": "3813:77:4", "statements": [{"assignments": [767], "declarations": [{"constant": false, "id": 767, "mutability": "mutable", "name": "p", "nodeType": "VariableDeclaration", "scope": 775, "src": "3823:15:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 766, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 765, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "3823:6:4"}, "referencedDeclaration": 388, "src": "3823:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "id": 771, "initialValue": {"baseExpression": {"id": 768, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "3841:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 770, "indexExpression": {"id": 769, "name": "playerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "3849:10:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3841:19:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3823:37:4"}, {"expression": {"expression": {"id": 772, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "3877:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 773, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 381, "src": "3877:6:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 764, "id": 774, "nodeType": "Return", "src": "3870:13:4"}]}, "functionSelector": "e18d38ce", "id": 776, "implemented": true, "kind": "function", "modifiers": [], "name": "getPlayerName", "nodeType": "FunctionDefinition", "parameters": {"id": 761, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 760, "mutability": "mutable", "name": "playerAddr", "nodeType": "VariableDeclaration", "scope": 776, "src": "3727:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 759, "name": "address", "nodeType": "ElementaryTypeName", "src": "3727:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3726:20:4"}, "returnParameters": {"id": 764, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 763, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 776, "src": "3794:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 762, "name": "string", "nodeType": "ElementaryTypeName", "src": "3794:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3793:15:4"}, "scope": 813, "src": "3704:186:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 793, "nodeType": "Block", "src": "4000:78:4", "statements": [{"assignments": [785], "declarations": [{"constant": false, "id": 785, "mutability": "mutable", "name": "p", "nodeType": "VariableDeclaration", "scope": 793, "src": "4010:15:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 784, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 783, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "4010:6:4"}, "referencedDeclaration": 388, "src": "4010:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "id": 789, "initialValue": {"baseExpression": {"id": 786, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "4028:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 788, "indexExpression": {"id": 787, "name": "playerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 778, "src": "4036:10:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4028:19:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4010:37:4"}, {"expression": {"expression": {"id": 790, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 785, "src": "4064:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 791, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 383, "src": "4064:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 782, "id": 792, "nodeType": "Return", "src": "4057:14:4"}]}, "functionSelector": "ed48e8fc", "id": 794, "implemented": true, "kind": "function", "modifiers": [], "name": "getPlayerCoins", "nodeType": "FunctionDefinition", "parameters": {"id": 779, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 778, "mutability": "mutable", "name": "playerAddr", "nodeType": "VariableDeclaration", "scope": 794, "src": "3920:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 777, "name": "address", "nodeType": "ElementaryTypeName", "src": "3920:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3919:20:4"}, "returnParameters": {"id": 782, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 781, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 794, "src": "3987:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 780, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3987:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3986:9:4"}, "scope": 813, "src": "3896:182:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 811, "nodeType": "Block", "src": "4191:81:4", "statements": [{"assignments": [803], "declarations": [{"constant": false, "id": 803, "mutability": "mutable", "name": "p", "nodeType": "VariableDeclaration", "scope": 811, "src": "4201:15:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player"}, "typeName": {"id": 802, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 801, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 388, "src": "4201:6:4"}, "referencedDeclaration": 388, "src": "4201:6:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage_ptr", "typeString": "struct Race.Player"}}, "visibility": "internal"}], "id": 807, "initialValue": {"baseExpression": {"id": 804, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "4219:7:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$388_storage_$", "typeString": "mapping(address => struct Race.Player storage ref)"}}, "id": 806, "indexExpression": {"id": 805, "name": "playerAddr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 796, "src": "4227:10:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4219:19:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_storage", "typeString": "struct Race.Player storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4201:37:4"}, {"expression": {"expression": {"id": 808, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 803, "src": "4255:1:4", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$388_memory_ptr", "typeString": "struct Race.Player memory"}}, "id": 809, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "distance", "nodeType": "MemberAccess", "referencedDeclaration": 385, "src": "4255:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 800, "id": 810, "nodeType": "Return", "src": "4248:17:4"}]}, "functionSelector": "da4f73d0", "id": 812, "implemented": true, "kind": "function", "modifiers": [], "name": "getPlayerDistance", "nodeType": "FunctionDefinition", "parameters": {"id": 797, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 796, "mutability": "mutable", "name": "playerAddr", "nodeType": "VariableDeclaration", "scope": 812, "src": "4111:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 795, "name": "address", "nodeType": "ElementaryTypeName", "src": "4111:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4110:20:4"}, "returnParameters": {"id": 800, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 799, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 812, "src": "4178:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 798, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4178:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4177:9:4"}, "scope": 813, "src": "4084:188:4", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 814, "src": "266:4008:4"}], "src": "51:4224:4"}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/RaceTest.sol": {"AST": {"absolutePath": "RaceTest.sol", "exportedSymbols": {"Context": [835], "Counters": [319], "IGame": [370], "Ownable": [245], "Race": [813], "RaceTest": [132]}, "id": 133, "license": "SEE LICENSE IN LICENSE", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "51:23:5"}, {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2, "nodeType": "ImportDirective", "scope": 133, "sourceUnit": 246, "src": "104:52:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Counters.sol", "file": "@openzeppelin/contracts/utils/Counters.sol", "id": 3, "nodeType": "ImportDirective", "scope": 133, "sourceUnit": 320, "src": "175:52:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "IGame.sol", "file": "./IGame.sol", "id": 4, "nodeType": "ImportDirective", "scope": 133, "sourceUnit": 371, "src": "243:21:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "Race.sol", "file": "./Race.sol", "id": 5, "nodeType": "ImportDirective", "scope": 133, "sourceUnit": 814, "src": "266:20:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [813], "contractKind": "contract", "fullyImplemented": true, "id": 132, "linearizedBaseContracts": [132], "name": "RaceTest", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 8, "mutability": "mutable", "name": "level", "nodeType": "VariableDeclaration", "scope": 132, "src": "312:10:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}, "typeName": {"id": 7, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6, "name": "Race", "nodeType": "IdentifierPath", "referencedDeclaration": 813, "src": "312:4:5"}, "referencedDeclaration": 813, "src": "312:4:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}, "visibility": "internal"}, {"canonicalName": "RaceTest.Player", "id": 17, "members": [{"constant": false, "id": 10, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 17, "src": "353:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 9, "name": "string", "nodeType": "ElementaryTypeName", "src": "353:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 12, "mutability": "mutable", "name": "coins", "nodeType": "VariableDeclaration", "scope": 17, "src": "374:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "374:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 14, "mutability": "mutable", "name": "distance", "nodeType": "VariableDeclaration", "scope": 17, "src": "397:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "397:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16, "mutability": "mutable", "name": "isPlayer", "nodeType": "VariableDeclaration", "scope": 17, "src": "423:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 15, "name": "bool", "nodeType": "ElementaryTypeName", "src": "423:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "Player", "nodeType": "StructDefinition", "scope": 132, "src": "329:114:5", "visibility": "public"}, {"constant": false, "functionSelector": "e2eb41ff", "id": 22, "mutability": "mutable", "name": "players", "nodeType": "VariableDeclaration", "scope": 132, "src": "449:41:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$17_storage_$", "typeString": "mapping(address => struct RaceTest.Player)"}, "typeName": {"id": 21, "keyType": {"id": 18, "name": "address", "nodeType": "ElementaryTypeName", "src": "457:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "449:26:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$17_storage_$", "typeString": "mapping(address => struct RaceTest.Player)"}, "valueType": {"id": 20, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 19, "name": "Player", "nodeType": "IdentifierPath", "referencedDeclaration": 17, "src": "468:6:5"}, "referencedDeclaration": 17, "src": "468:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Player_$17_storage_ptr", "typeString": "struct RaceTest.Player"}}}, "visibility": "public"}, {"canonicalName": "RaceTest.State", "id": 26, "members": [{"id": 23, "name": "PREGAME", "nodeType": "EnumValue", "src": "518:7:5"}, {"id": 24, "name": "ONGOING", "nodeType": "EnumValue", "src": "535:7:5"}, {"id": 25, "name": "ENDED", "nodeType": "EnumValue", "src": "552:5:5"}], "name": "State", "nodeType": "EnumDefinition", "src": "497:66:5"}, {"constant": false, "id": 29, "mutability": "mutable", "name": "gameState", "nodeType": "VariableDeclaration", "scope": 132, "src": "569:15:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}, "typeName": {"id": 28, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 27, "name": "State", "nodeType": "IdentifierPath", "referencedDeclaration": 26, "src": "569:5:5"}, "referencedDeclaration": 26, "src": "569:5:5", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "visibility": "internal"}, {"constant": false, "id": 31, "mutability": "mutable", "name": "raceId", "nodeType": "VariableDeclaration", "scope": 132, "src": "590:13:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 30, "name": "string", "nodeType": "ElementaryTypeName", "src": "590:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 33, "mutability": "mutable", "name": "currWinnerAddr", "nodeType": "VariableDeclaration", "scope": 132, "src": "609:30:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 32, "name": "address", "nodeType": "ElementaryTypeName", "src": "609:15:5", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"body": {"id": 60, "nodeType": "Block", "src": "668:334:5", "statements": [{"expression": {"id": 58, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 36, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "678:5:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "31", "id": 40, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "708:3:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}, "value": "1"}, {"arguments": [{"hexValue": "307842316244383645383066374136323836463537354637373032363138333330623643643731353130", "id": 43, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "733:42:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xB1bD86E80f7A6286F575F7702618330b6Cd71510"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 42, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "725:8:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 41, "name": "address", "nodeType": "ElementaryTypeName", "src": "725:8:5", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 44, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "725:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"hexValue": "616c696365", "id": 45, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "790:7:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501", "typeString": "literal_string \"alice\""}, "value": "alice"}, {"arguments": [{"hexValue": "307830363841376332636465383262354442314535633334356662443037363636613745413837393331", "id": 48, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "819:42:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x068A7c2cde82b5DB1E5c345fbD07666a7EA87931"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 47, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "811:8:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 46, "name": "address", "nodeType": "ElementaryTypeName", "src": "811:8:5", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 49, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "811:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"hexValue": "626f62", "id": 50, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "876:5:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2", "typeString": "literal_string \"bob\""}, "value": "bob"}, {"arguments": [{"hexValue": "307845364339334435304231413333303962356436623838363745313434376332443962344446653961", "id": 53, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "903:42:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xE6C93D50B1A3309b5d6b8867E1447c2D9b4DFe9a"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 52, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "895:8:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 51, "name": "address", "nodeType": "ElementaryTypeName", "src": "895:8:5", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 54, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "895:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"hexValue": "636861726c6965", "id": 55, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "960:9:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_87a213ce1ee769e28decedefb98f6fe48890a74ba84957ebf877fb591e37e0de", "typeString": "literal_string \"charlie\""}, "value": "charlie"}, {"hexValue": "3130", "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "983:2:5", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501", "typeString": "literal_string \"alice\""}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2", "typeString": "literal_string \"bob\""}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_stringliteral_87a213ce1ee769e28decedefb98f6fe48890a74ba84957ebf877fb591e37e0de", "typeString": "literal_string \"charlie\""}, {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}], "id": 39, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "686:8:5", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_Race_$813_$", "typeString": "function (string memory,address,string memory,address,string memory,address,string memory,uint256) returns (contract Race)"}, "typeName": {"id": 38, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 37, "name": "Race", "nodeType": "IdentifierPath", "referencedDeclaration": 813, "src": "690:4:5"}, "referencedDeclaration": 813, "src": "690:4:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}}, "id": 57, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "686:309:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}, "src": "678:317:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}, "id": 59, "nodeType": "ExpressionStatement", "src": "678:317:5"}]}, "id": 61, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 34, "nodeType": "ParameterList", "parameters": [], "src": "657:2:5"}, "returnParameters": {"id": 35, "nodeType": "ParameterList", "parameters": [], "src": "668:0:5"}, "scope": 132, "src": "646:356:5", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 72, "nodeType": "Block", "src": "1291:58:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}, "id": 68, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 64, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "1309:9:5", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 66, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1328:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 65, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "1322:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$26_$", "typeString": "type(enum RaceTest.State)"}}, "id": 67, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1322:8:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "src": "1309:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 63, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1301:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 69, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1301:30:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 70, "nodeType": "ExpressionStatement", "src": "1301:30:5"}, {"id": 71, "nodeType": "PlaceholderStatement", "src": "1341:1:5"}]}, "id": 73, "name": "pregame", "nodeType": "ModifierDefinition", "parameters": {"id": 62, "nodeType": "ParameterList", "parameters": [], "src": "1288:2:5"}, "src": "1272:77:5", "virtual": false, "visibility": "internal"}, {"body": {"id": 84, "nodeType": "Block", "src": "1373:58:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}, "id": 80, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 76, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "1391:9:5", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "31", "id": 78, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1410:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 77, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "1404:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$26_$", "typeString": "type(enum RaceTest.State)"}}, "id": 79, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1404:8:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "src": "1391:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 75, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1383:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 81, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1383:30:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 82, "nodeType": "ExpressionStatement", "src": "1383:30:5"}, {"id": 83, "nodeType": "PlaceholderStatement", "src": "1423:1:5"}]}, "id": 85, "name": "ongoing", "nodeType": "ModifierDefinition", "parameters": {"id": 74, "nodeType": "ParameterList", "parameters": [], "src": "1370:2:5"}, "src": "1354:77:5", "virtual": false, "visibility": "internal"}, {"body": {"id": 96, "nodeType": "Block", "src": "1457:58:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}, "id": 92, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 88, "name": "gameState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "1475:9:5", "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "32", "id": 90, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1494:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 89, "name": "State", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "1488:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_State_$26_$", "typeString": "type(enum RaceTest.State)"}}, "id": 91, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1488:8:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_State_$26", "typeString": "enum RaceTest.State"}}, "src": "1475:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 87, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1467:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1467:30:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 94, "nodeType": "ExpressionStatement", "src": "1467:30:5"}, {"id": 95, "nodeType": "PlaceholderStatement", "src": "1507:1:5"}]}, "id": 97, "name": "finished", "nodeType": "ModifierDefinition", "parameters": {"id": 86, "nodeType": "ParameterList", "parameters": [], "src": "1454:2:5"}, "src": "1437:78:5", "virtual": false, "visibility": "internal"}, {"body": {"id": 114, "nodeType": "Block", "src": "2450:163:5", "statements": [{"expression": {"arguments": [{"arguments": [{"hexValue": "307842316244383645383066374136323836463537354637373032363138333330623643643731353130", "id": 105, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2500:42:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xB1bD86E80f7A6286F575F7702618330b6Cd71510"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 104, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2492:8:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 103, "name": "address", "nodeType": "ElementaryTypeName", "src": "2492:8:5", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2492:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"hexValue": "32", "id": 107, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2557:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, {"hexValue": "32", "id": 108, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2572:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 100, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2460:5:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}, "id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "updatePlayer", "nodeType": "MemberAccess", "referencedDeclaration": 720, "src": "2460:18:5", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256) external"}}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2460:123:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 110, "nodeType": "ExpressionStatement", "src": "2460:123:5"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 111, "name": "test_hacked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "2593:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$", "typeString": "function () returns (bool)"}}, "id": 112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2593:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 113, "nodeType": "ExpressionStatement", "src": "2593:13:5"}]}, "functionSelector": "5baca5bd", "id": 115, "implemented": true, "kind": "function", "modifiers": [], "name": "test_updatePlayer", "nodeType": "FunctionDefinition", "parameters": {"id": 98, "nodeType": "ParameterList", "parameters": [], "src": "2440:2:5"}, "returnParameters": {"id": 99, "nodeType": "ParameterList", "parameters": [], "src": "2450:0:5"}, "scope": 132, "src": "2414:199:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 130, "nodeType": "Block", "src": "3653:216:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 121, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3833:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3833:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 125, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "3855:5:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Race_$813", "typeString": "contract Race"}], "id": 124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3847:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 123, "name": "address", "nodeType": "ElementaryTypeName", "src": "3847:7:5", "typeDescriptions": {}}}, "id": 126, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3847:14:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3833:28:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 120, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "3826:6:5", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3826:36:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "3826:36:5"}]}, "functionSelector": "3b36103c", "id": 131, "implemented": true, "kind": "function", "modifiers": [], "name": "test_hacked", "nodeType": "FunctionDefinition", "parameters": {"id": 116, "nodeType": "ParameterList", "parameters": [], "src": "3628:2:5"}, "returnParameters": {"id": 119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 118, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 131, "src": "3647:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 117, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3647:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3646:6:5"}, "scope": 132, "src": "3608:261:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 133, "src": "288:3583:5"}], "src": "51:3821:5"}}}, "sourceList": ["/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/access/Ownable.sol", "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Context.sol", "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Counters.sol", "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/IGame.sol", "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/Race.sol", "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/RaceTest.sol"], "contracts": {"/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"constructor": {"author": null, "details": "Initializes the contract setting the deployer as the initial owner.", "params": {}, "return": null}, "owner()": {"author": null, "details": "Returns the address of the current owner.", "params": {}, "return": null}, "renounceOwnership()": {"author": null, "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.", "params": {}, "return": null}, "transferOwnership(address)": {"author": null, "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.", "params": {}, "return": null}}, "author": null, "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.", "title": null}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Context.sol:Context": {"srcmap": "", "srcmap-runtime": "", "abi": "[]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.", "title": null}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/node_modules/@openzeppelin/contracts/utils/Counters.sol:Counters": {"srcmap": "424:971:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "424:971:2:-:0;;;;;;;;", "abi": "[]", "bin": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071f2e800e71db7d11e62744bfd9576447635bc29936099edd8d57aeb7d5bb67064736f6c63430008000033", "bin-runtime": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071f2e800e71db7d11e62744bfd9576447635bc29936099edd8d57aeb7d5bb67064736f6c63430008000033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": "Matt Condon (@shrugs)", "details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`", "title": "Counters"}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/IGame.sol:IGame": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[],\"name\":\"GameBegun\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameFinished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getTotalPlayers\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOngoing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPlayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPregame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"getTotalPlayers()": {"author": null, "details": "Return the total number of players in the game ", "params": {}, "return": null}, "getWinner()": {"author": null, "details": "Returns the address of the current winner  ", "params": {}, "return": null}, "isFinished()": {"author": null, "details": "Returns a boolean that dictates if the game has ended ", "params": {}, "return": null}, "isOngoing()": {"author": null, "details": "Returns a boolean that dictates if the game is currently ongoing ", "params": {}, "return": null}, "isPlayer(address)": {"author": null, "details": "Returns a boolean that dictates if the account is a player in the game ", "params": {"account": "The address of the account to check"}, "return": null}, "isPregame()": {"author": null, "details": "Returns a boolean that dictates if the game hasn't started yet ", "params": {}, "return": null}}, "author": null, "details": "Interface of a Game standard   Note: The interface is made for composability meaning that it should be possible to implment a wide range of game contracts, with different rules and logic  Implementation: Reccomend using state variables to keep track of the game state ", "title": null}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/Race.sol:Race": {"srcmap": "266:4008:4:-:0;;;613:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;893:1:4;876:19;;:5;:19;;;;:58;;;;;932:1;915:19;;:5;:19;;;;876:58;:97;;;;;971:1;954:19;;:5;:19;;;;876:97;:131;;;;;1006:1;993:9;:14;;876:131;855:162;;;;;;1037:7;1028:6;:16;;;;;;;;;;;;:::i;:::-;;1071:28;1082:5;1089:9;1071:10;;;:28;;:::i;:::-;1054:7;:14;1062:5;1054:14;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:28;1137:5;1144:9;1126:10;;;:28;;:::i;:::-;1109:7;:14;1117:5;1109:14;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:28;1192:5;1199:9;1181:10;;;:28;;:::i;:::-;1164:7;:14;1172:5;1164:14;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:5;1220:14;;:22;;;;;;;;;;;;;;;;;;1271:1;1265:8;;;;;;;;;;;;;;;;1253:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:13;;;;;;;;;;613:696;;;;;;;;266:4008;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;1342:172:4:-;1443:13;;:::i;:::-;1479:28;;;;;;;;1486:4;1479:28;;;;1492:5;1479:28;;;;1499:1;1479:28;;;;1502:4;1479:28;;;;;1472:35;;1342:172;;;;:::o;266:4008::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:6:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;366:143::-;;454:6;448:13;439:22;;470:33;497:5;470:33;:::i;:::-;429:80;;;;:::o;529:288::-;;645:3;638:4;630:6;626:17;622:27;612:2;;663:1;660;653:12;612:2;696:6;690:13;721:90;807:3;799:6;792:4;784:6;780:17;721:90;:::i;:::-;712:99;;602:215;;;;;:::o;823:143::-;;911:6;905:13;896:22;;927:33;954:5;927:33;:::i;:::-;886:80;;;;:::o;972:1805::-;;;;;;;;;1250:3;1238:9;1229:7;1225:23;1221:33;1218:2;;;1267:1;1264;1257:12;1218:2;1331:1;1320:9;1316:17;1310:24;1361:18;1353:6;1350:30;1347:2;;;1393:1;1390;1383:12;1347:2;1421:74;1487:7;1478:6;1467:9;1463:22;1421:74;:::i;:::-;1411:84;;1281:224;1544:2;1570:64;1626:7;1617:6;1606:9;1602:22;1570:64;:::i;:::-;1560:74;;1515:129;1704:2;1693:9;1689:18;1683:25;1735:18;1727:6;1724:30;1721:2;;;1767:1;1764;1757:12;1721:2;1795:74;1861:7;1852:6;1841:9;1837:22;1795:74;:::i;:::-;1785:84;;1654:225;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;2078:3;2067:9;2063:19;2057:26;2110:18;2102:6;2099:30;2096:2;;;2142:1;2139;2132:12;2096:2;2170:74;2236:7;2227:6;2216:9;2212:22;2170:74;:::i;:::-;2160:84;;2028:226;2293:3;2320:64;2376:7;2367:6;2356:9;2352:22;2320:64;:::i;:::-;2310:74;;2264:130;2454:3;2443:9;2439:19;2433:26;2486:18;2478:6;2475:30;2472:2;;;2518:1;2515;2508:12;2472:2;2546:74;2612:7;2603:6;2592:9;2588:22;2546:74;:::i;:::-;2536:84;;2404:226;2669:3;2696:64;2752:7;2743:6;2732:9;2728:22;2696:64;:::i;:::-;2686:74;;2640:130;1208:1569;;;;;;;;;;;:::o;2783:283::-;;2849:2;2843:9;2833:19;;2891:4;2883:6;2879:17;2998:6;2986:10;2983:22;2962:18;2950:10;2947:34;2944:62;2941:2;;;3009:18;;:::i;:::-;2941:2;3049:10;3045:2;3038:22;2823:243;;;;:::o;3072:332::-;;3224:18;3216:6;3213:30;3210:2;;;3246:18;;:::i;:::-;3210:2;3331:4;3327:9;3320:4;3312:6;3308:17;3304:33;3296:41;;3392:4;3386;3382:15;3374:23;;3139:265;;;:::o;3410:96::-;;3476:24;3494:5;3476:24;:::i;:::-;3465:35;;3455:51;;;:::o;3512:126::-;;3589:42;3582:5;3578:54;3567:65;;3557:81;;;:::o;3644:77::-;;3710:5;3699:16;;3689:32;;;:::o;3727:307::-;3795:1;3805:113;3819:6;3816:1;3813:13;3805:113;;;3904:1;3899:3;3895:11;3889:18;3885:1;3880:3;3876:11;3869:39;3841:2;3838:1;3834:10;3829:15;;3805:113;;;3936:6;3933:1;3930:13;3927:2;;;4016:1;4007:6;4002:3;3998:16;3991:27;3927:2;3776:258;;;;:::o;4040:320::-;;4121:1;4115:4;4111:12;4101:22;;4168:1;4162:4;4158:12;4189:18;4179:2;;4245:4;4237:6;4233:17;4223:27;;4179:2;4307;4299:6;4296:14;4276:18;4273:38;4270:2;;;4326:18;;:::i;:::-;4270:2;4091:269;;;;:::o;4366:180::-;4414:77;4411:1;4404:88;4511:4;4508:1;4501:15;4535:4;4532:1;4525:15;4552:180;4600:77;4597:1;4590:88;4697:4;4694:1;4687:15;4721:4;4718:1;4711:15;4738:122;4811:24;4829:5;4811:24;:::i;:::-;4804:5;4801:35;4791:2;;4850:1;4847;4840:12;4791:2;4781:79;:::o;4866:122::-;4939:24;4957:5;4939:24;:::i;:::-;4932:5;4929:35;4919:2;;4978:1;4975;4968:12;4919:2;4909:79;:::o;266:4008:4:-;;;;;;;", "srcmap-runtime": "266:4008:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1960;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2438:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2322:110;;;:::i;:::-;;1831:101:0;;;:::i;:::-;;2070:105:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2536:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2842:534;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:109:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2207;;;:::i;:::-;;4084:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3704:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;424:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3896:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:178:4;3472:4;3488:15;3506:7;:16;3514:7;3506:16;;;;;;;;;;;;;;;3488:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3539:1;:10;;;:37;;;;;3573:1;3554:21;;:7;:21;;;;3539:37;3532:44;;;3405:178;;;:::o;1850:104::-;1903:4;1945:1;1939:8;;;;;;;;;;;;;;;;1926:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;1919:28;;1850:104;:::o;1960:::-;2013:4;2055:1;2049:8;;;;;;;;;;;;;;;;2036:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;2029:28;;1960:104;:::o;2438:92::-;2497:6;2522:1;2515:8;;2438:92;:::o;2322:110::-;1094:13:0;:11;:13::i;:::-;1696:1:4::1;1690:8;;;;;;;;;;;;;;;;1677:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;1669:30;;;::::0;::::1;;2394:1:::2;2388:8:::0;::::2;;;;;;;;;;;;;;;2376:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2411:14;;;;;;;;;;2322:110::o:0;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2070:105:4:-;2124:4;2166:1;2160:8;;;;;;;;;;;;;;;;2147:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;2140:28;;2070:105;:::o;2536:89::-;2580:13;2612:6;2605:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:89;:::o;2842:534::-;1094:13:0;:11;:13::i;:::-;1696:1:4::1;1690:8;;;;;;;;;;;;;;;;1677:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;1669:30;;;::::0;::::1;;2984:4:::2;:13;;;2998:4;2984:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2976:28;;;::::0;::::2;;3021:5;3014:13;;;;;;;;;;;;3038:15;3056:7;:13;3064:4;3056:13;;;;;;;;;;;;;;;3038:31;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;3097:1;:7;;;3088:5;:16;;:42;;;;;3120:1;:10;;;3108:8;:22;;3088:42;3080:51;;;::::0;::::2;;3152:5;3142:1;:7;;:15;;;::::0;::::2;3180:8;3167:1;:10;;:21;;;::::0;::::2;3214:1;3198:7;:13;3206:4;3198:13;;;;;;;;;;;;;;;:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:24;3253:7;:23;3261:14;;;;;;;;;;;3253:23;;;;;;;;;;;;;;;3226:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;3303:10;:19;;;3290:1;:10;;;:32;3286:84;;;3355:4;3338:14;;:21;;;;;;;;;;;;;;;;;;3286:84;1709:1;;2842:534:::0;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3589:109:4:-;3651:7;1780:1;1774:8;;;;;;;;;;;;;;;;1761:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;1753:30;;;;;;3677:14:::1;;;;;;;;;;;3670:21;;3589:109:::0;:::o;2207:::-;1094:13:0;:11;:13::i;:::-;1614:1:4::1;1608:8;;;;;;;;;;;;;;;;1595:21;;;;;;;;;;;;;;;;:9;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;1587:30;;;::::0;::::1;;2281:1:::2;2275:8;;;;;;;;;;;;;;;;2263:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:11;;;;;;;;;;2207:109::o:0;4084:188::-;4178:7;4201:15;4219:7;:19;4227:10;4219:19;;;;;;;;;;;;;;;4201:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:1;:10;;;4248:17;;;4084:188;;;:::o;3704:186::-;3794:13;3823:15;3841:7;:19;3849:10;3841:19;;;;;;;;;;;;;;;3823:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:1;:6;;;3870:13;;;3704:186;;;:::o;424:41::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3896:182::-;3987:7;4010:15;4028:7;:19;4036:10;4028:19;;;;;;;;;;;;;;;4010:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4064:1;:7;;;4057:14;;;3896:182;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:552::-;;;;850:2;838:9;829:7;825:23;821:32;818:2;;;866:1;863;856:12;818:2;909:1;934:53;979:7;970:6;959:9;955:22;934:53;:::i;:::-;924:63;;880:117;1036:2;1062:53;1107:7;1098:6;1087:9;1083:22;1062:53;:::i;:::-;1052:63;;1007:118;1164:2;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1135:118;808:452;;;;;:::o;1266:278::-;;1382:2;1370:9;1361:7;1357:23;1353:32;1350:2;;;1398:1;1395;1388:12;1350:2;1441:1;1466:61;1519:7;1510:6;1499:9;1495:22;1466:61;:::i;:::-;1456:71;;1412:125;1340:204;;;;:::o;1550:118::-;1637:24;1655:5;1637:24;:::i;:::-;1632:3;1625:37;1615:53;;:::o;1674:109::-;1755:21;1770:5;1755:21;:::i;:::-;1750:3;1743:34;1733:50;;:::o;1789:364::-;;1905:39;1938:5;1905:39;:::i;:::-;1960:71;2024:6;2019:3;1960:71;:::i;:::-;1953:78;;2040:52;2085:6;2080:3;2073:4;2066:5;2062:16;2040:52;:::i;:::-;2117:29;2139:6;2117:29;:::i;:::-;2112:3;2108:39;2101:46;;1881:272;;;;;:::o;2159:370::-;;2322:67;2386:2;2381:3;2322:67;:::i;:::-;2315:74;;2419:34;2415:1;2410:3;2406:11;2399:55;2485:8;2480:2;2475:3;2471:12;2464:30;2520:2;2515:3;2511:12;2504:19;;2305:224;;;:::o;2535:330::-;;2698:67;2762:2;2757:3;2698:67;:::i;:::-;2691:74;;2795:34;2791:1;2786:3;2782:11;2775:55;2856:2;2851:3;2847:12;2840:19;;2681:184;;;:::o;2871:118::-;2958:24;2976:5;2958:24;:::i;:::-;2953:3;2946:37;2936:53;;:::o;2995:115::-;3080:23;3097:5;3080:23;:::i;:::-;3075:3;3068:36;3058:52;;:::o;3116:222::-;;3247:2;3236:9;3232:18;3224:26;;3260:71;3328:1;3317:9;3313:17;3304:6;3260:71;:::i;:::-;3214:124;;;;:::o;3344:210::-;;3469:2;3458:9;3454:18;3446:26;;3482:65;3544:1;3533:9;3529:17;3520:6;3482:65;:::i;:::-;3436:118;;;;:::o;3560:313::-;;3711:2;3700:9;3696:18;3688:26;;3760:9;3754:4;3750:20;3746:1;3735:9;3731:17;3724:47;3788:78;3861:4;3852:6;3788:78;:::i;:::-;3780:86;;3678:195;;;;:::o;3879:632::-;;4108:3;4097:9;4093:19;4085:27;;4158:9;4152:4;4148:20;4144:1;4133:9;4129:17;4122:47;4186:78;4259:4;4250:6;4186:78;:::i;:::-;4178:86;;4274:72;4342:2;4331:9;4327:18;4318:6;4274:72;:::i;:::-;4356;4424:2;4413:9;4409:18;4400:6;4356:72;:::i;:::-;4438:66;4500:2;4489:9;4485:18;4476:6;4438:66;:::i;:::-;4075:436;;;;;;;:::o;4517:419::-;;4721:2;4710:9;4706:18;4698:26;;4770:9;4764:4;4760:20;4756:1;4745:9;4741:17;4734:47;4798:131;4924:4;4798:131;:::i;:::-;4790:139;;4688:248;;;:::o;4942:419::-;;5146:2;5135:9;5131:18;5123:26;;5195:9;5189:4;5185:20;5181:1;5170:9;5166:17;5159:47;5223:131;5349:4;5223:131;:::i;:::-;5215:139;;5113:248;;;:::o;5367:222::-;;5498:2;5487:9;5483:18;5475:26;;5511:71;5579:1;5568:9;5564:17;5555:6;5511:71;:::i;:::-;5465:124;;;;:::o;5595:218::-;;5724:2;5713:9;5709:18;5701:26;;5737:69;5803:1;5792:9;5788:17;5779:6;5737:69;:::i;:::-;5691:122;;;;:::o;5819:99::-;;5905:5;5899:12;5889:22;;5878:40;;;:::o;5924:169::-;;6042:6;6037:3;6030:19;6082:4;6077:3;6073:14;6058:29;;6020:73;;;;:::o;6099:96::-;;6165:24;6183:5;6165:24;:::i;:::-;6154:35;;6144:51;;;:::o;6201:90::-;;6278:5;6271:13;6264:21;6253:32;;6243:48;;;:::o;6297:126::-;;6374:42;6367:5;6363:54;6352:65;;6342:81;;;:::o;6429:77::-;;6495:5;6484:16;;6474:32;;;:::o;6512:93::-;;6588:10;6581:5;6577:22;6566:33;;6556:49;;;:::o;6611:307::-;6679:1;6689:113;6703:6;6700:1;6697:13;6689:113;;;6788:1;6783:3;6779:11;6773:18;6769:1;6764:3;6760:11;6753:39;6725:2;6722:1;6718:10;6713:15;;6689:113;;;6820:6;6817:1;6814:13;6811:2;;;6900:1;6891:6;6886:3;6882:16;6875:27;6811:2;6660:258;;;;:::o;6924:320::-;;7005:1;6999:4;6995:12;6985:22;;7052:1;7046:4;7042:12;7073:18;7063:2;;7129:4;7121:6;7117:17;7107:27;;7063:2;7191;7183:6;7180:14;7160:18;7157:38;7154:2;;;7210:18;;:::i;:::-;7154:2;6975:269;;;;:::o;7250:180::-;7298:77;7295:1;7288:88;7395:4;7392:1;7385:15;7419:4;7416:1;7409:15;7436:102;;7528:2;7524:7;7519:2;7512:5;7508:14;7504:28;7494:38;;7484:54;;;:::o;7544:122::-;7617:24;7635:5;7617:24;:::i;:::-;7610:5;7607:35;7597:2;;7656:1;7653;7646:12;7597:2;7587:79;:::o;7672:116::-;7742:21;7757:5;7742:21;:::i;:::-;7735:5;7732:32;7722:2;;7778:1;7775;7768:12;7722:2;7712:76;:::o;7794:122::-;7867:24;7885:5;7867:24;:::i;:::-;7860:5;7857:35;7847:2;;7906:1;7903;7896:12;7847:2;7837:79;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_raceId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr1\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name1\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr2\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name2\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr3\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name3\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initCoins\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameBegun\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"playerAddr\",\"type\":\"address\"}],\"name\":\"getPlayerCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"playerAddr\",\"type\":\"address\"}],\"name\":\"getPlayerDistance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"playerAddr\",\"type\":\"address\"}],\"name\":\"getPlayerName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaceId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPlayers\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOngoing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPlayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPregame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPlayer\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distance\",\"type\":\"uint256\"}],\"name\":\"updatePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80638ab19a70116100a2578063da4f73d011610071578063da4f73d01461024c578063e18d38ce1461027c578063e2eb41ff146102ac578063ed48e8fc146102df578063f2fde38b1461030f5761010b565b80638ab19a70146101ea5780638da5cb5b146102065780638e7ea5b214610224578063d65ab5f2146102425761010b565b80636cbc2ded116100de5780636cbc2ded1461019a578063715018a6146101a45780637b352962146101ae578063878e24a4146101cc5761010b565b806309c95e10146101105780632e547407146101405780633e0881a91461015e5780634529cae71461017c575b600080fd5b61012a60048036038101906101259190611751565b61032b565b6040516101379190611928565b60405180910390f35b610148610481565b6040516101559190611928565b60405180910390f35b610166610542565b6040516101739190611928565b60405180910390f35b610184610604565b6040516101919190611a0c565b60405180910390f35b6101a261060d565b005b6101ac61078f565b005b6101b66107a3565b6040516101c39190611928565b60405180910390f35b6101d4610864565b6040516101e19190611943565b60405180910390f35b61020460048036038101906101ff919061177a565b6108f6565b005b61020e610deb565b60405161021b919061190d565b60405180910390f35b61022c610e14565b604051610239919061190d565b60405180910390f35b61024a610f01565b005b61026660048036038101906102619190611751565b611084565b60405161027391906119f1565b60405180910390f35b61029660048036038101906102919190611751565b6111a1565b6040516102a39190611943565b60405180910390f35b6102c660048036038101906102c19190611751565b6112bf565b6040516102d69493929190611965565b60405180910390f35b6102f960048036038101906102f49190611751565b611384565b60405161030691906119f1565b60405180910390f35b61032960048036038101906103249190611751565b6114a1565b005b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461038890611ace565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490611ace565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050806060015180156104795750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b915050919050565b60008060028111156104bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156104f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff16600281111561053c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905090565b60006001600281111561057e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156105b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff1660028111156105fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905090565b60006003905090565b610615611525565b6001600281111561064f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff1660028111156106cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106d957600080fd5b600280811115610712577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260006101000a81548160ff0219169083600281111561075c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f4860405160405180910390a1565b610797611525565b6107a160006115a3565b565b60006002808111156107de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610816577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff16600281111561085e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905090565b60606003805461087390611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461089f90611ace565b80156108ec5780601f106108c1576101008083540402835291602001916108ec565b820191906000526020600020905b8154815290600101906020018083116108cf57829003601f168201915b5050505050905090565b6108fe611525565b60016002811115610938577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610970577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff1660028111156109b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146109c257600080fd5b3073ffffffffffffffffffffffffffffffffffffffff166309c95e10846040518263ffffffff1660e01b81526004016109fb919061190d565b60206040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b91906117c9565b610a5457600080fd5b6000610a89577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054610ae590611ace565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190611ace565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905080602001518311158015610bb0575080604001518210155b610bb957600080fd5b828160200181815250508181604001818152505080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610c2992919061166f565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600060016000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054610cdf90611ace565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0b90611ace565b8015610d585780601f10610d2d57610100808354040283529160200191610d58565b820191906000526020600020905b815481529060010190602001808311610d3b57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050806040015182604001511115610de45784600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600280811115610e4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610e87577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff166002811115610ecf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610ed957600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f09611525565b60006002811115610f43577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610f7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff166002811115610fc3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610fcd57600080fd5b60016002811115611007577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260006101000a81548160ff02191690836002811115611051577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507ff863f7481d04a6f279fa8af8d3d3d0ebbe488f4730a3218e1d9b9de19bb812aa60405160405180910390a1565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546110e190611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461110d90611ace565b801561115a5780601f1061112f5761010080835404028352916020019161115a565b820191906000526020600020905b81548152906001019060200180831161113d57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060400151915050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546111ff90611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461122b90611ace565b80156112785780601f1061124d57610100808354040283529160200191611278565b820191906000526020600020905b81548152906001019060200180831161125b57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060000151915050919050565b60016020528060005260406000206000915090508060000180546112e290611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461130e90611ace565b801561135b5780601f106113305761010080835404028352916020019161135b565b820191906000526020600020905b81548152906001019060200180831161133e57829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546113e190611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461140d90611ace565b801561145a5780601f1061142f5761010080835404028352916020019161145a565b820191906000526020600020905b81548152906001019060200180831161143d57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060200151915050919050565b6114a9611525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611519576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611510906119b1565b60405180910390fd5b611522816115a3565b50565b61152d611667565b73ffffffffffffffffffffffffffffffffffffffff1661154b610deb565b73ffffffffffffffffffffffffffffffffffffffff16146115a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611598906119d1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461167b90611ace565b90600052602060002090601f01602090048101928261169d57600085556116e4565b82601f106116b657805160ff19168380011785556116e4565b828001600101855582156116e4579182015b828111156116e35782518255916020019190600101906116c8565b5b5090506116f191906116f5565b5090565b5b8082111561170e5760008160009055506001016116f6565b5090565b60008135905061172181611b40565b92915050565b60008151905061173681611b57565b92915050565b60008135905061174b81611b6e565b92915050565b60006020828403121561176357600080fd5b600061177184828501611712565b91505092915050565b60008060006060848603121561178f57600080fd5b600061179d86828701611712565b93505060206117ae8682870161173c565b92505060406117bf8682870161173c565b9150509250925092565b6000602082840312156117db57600080fd5b60006117e984828501611727565b91505092915050565b6117fb81611a43565b82525050565b61180a81611a55565b82525050565b600061181b82611a27565b6118258185611a32565b9350611835818560208601611a9b565b61183e81611b2f565b840191505092915050565b6000611856602683611a32565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118bc602083611a32565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6118f881611a81565b82525050565b61190781611a8b565b82525050565b600060208201905061192260008301846117f2565b92915050565b600060208201905061193d6000830184611801565b92915050565b6000602082019050818103600083015261195d8184611810565b905092915050565b6000608082019050818103600083015261197f8187611810565b905061198e60208301866118ef565b61199b60408301856118ef565b6119a86060830184611801565b95945050505050565b600060208201905081810360008301526119ca81611849565b9050919050565b600060208201905081810360008301526119ea816118af565b9050919050565b6000602082019050611a0660008301846118ef565b92915050565b6000602082019050611a2160008301846118fe565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a4e82611a61565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b83811015611ab9578082015181840152602081019050611a9e565b83811115611ac8576000848401525b50505050565b60006002820490506001821680611ae657607f821691505b60208210811415611afa57611af9611b00565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611b4981611a43565b8114611b5457600080fd5b50565b611b6081611a55565b8114611b6b57600080fd5b50565b611b7781611a81565b8114611b8257600080fd5b5056fea2646970667358221220412442de53e72a49c93c4f13c72444795306f1ccdd23286240171ce0a729e0fb64736f6c63430008000033", "userdoc": {"methods": {"updatePlayer(address,uint256,uint256)": {"notice": "if_succeeds {:msg \"Player Coins have Decreased\" } old(players[addr].coins) > players[addr].coins; if_succeeds {:msg \"intentionally failing test\" } old(players[addr].coins) < players[addr].coins;"}}, "notice": null}, "devdoc": {"methods": {"getTotalPlayers()": {"author": null, "details": "Return the total number of players in the game ", "params": {}, "return": null}, "getWinner()": {"author": null, "details": "Returns the address of the current winner  ", "params": {}, "return": null}, "isFinished()": {"author": null, "details": "Returns a boolean that dictates if the game has ended ", "params": {}, "return": null}, "isOngoing()": {"author": null, "details": "Returns a boolean that dictates if the game is currently ongoing ", "params": {}, "return": null}, "isPlayer(address)": {"author": null, "details": "Returns a boolean that dictates if the account is a player in the game ", "params": {"account": "The address of the account to check"}, "return": null}, "isPregame()": {"author": null, "details": "Returns a boolean that dictates if the game hasn't started yet ", "params": {}, "return": null}, "owner()": {"author": null, "details": "Returns the address of the current owner.", "params": {}, "return": null}, "renounceOwnership()": {"author": null, "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.", "params": {}, "return": null}, "transferOwnership(address)": {"author": null, "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.", "params": {}, "return": null}}, "author": null, "details": null, "title": null}}, "/Users/cindyjiang/Develop/franklindao/Matchbox/contracts/RaceTest.sol:RaceTest": {"srcmap": "288:3583:5:-:0;;;733:42;819;903;983:2;686:309;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;678:5;;:317;;;;;;;;;;;;;;;;;;288:3583;;;;;;;;;;:::o;7:147:6:-;102:45;141:5;102:45;:::i;:::-;97:3;90:58;80:74;;:::o;160:149::-;256:46;296:5;256:46;:::i;:::-;251:3;244:59;234:75;;:::o;315:300::-;;478:66;542:1;537:3;478:66;:::i;:::-;471:73;;574:5;570:1;565:3;561:11;554:26;606:2;601:3;597:12;590:19;;461:154;;;:::o;621:304::-;;784:66;848:1;843:3;784:66;:::i;:::-;777:73;;880:9;876:1;871:3;867:11;860:30;916:2;911:3;907:12;900:19;;767:158;;;:::o;931:302::-;;1094:66;1158:1;1153:3;1094:66;:::i;:::-;1087:73;;1190:7;1186:1;1181:3;1177:11;1170:28;1224:2;1219:3;1215:12;1208:19;;1077:156;;;:::o;1239:298::-;;1402:66;1466:1;1461:3;1402:66;:::i;:::-;1395:73;;1498:3;1494:1;1489:3;1485:11;1478:24;1528:2;1523:3;1519:12;1512:19;;1385:152;;;:::o;1543:1851::-;;2195:3;2184:9;2180:19;2172:27;;2245:9;2239:4;2235:20;2231:1;2220:9;2216:17;2209:47;2273:131;2399:4;2273:131;:::i;:::-;2265:139;;2414:80;2490:2;2479:9;2475:18;2466:6;2414:80;:::i;:::-;2541:9;2535:4;2531:20;2526:2;2515:9;2511:18;2504:48;2569:131;2695:4;2569:131;:::i;:::-;2561:139;;2710:80;2786:2;2775:9;2771:18;2762:6;2710:80;:::i;:::-;2838:9;2832:4;2828:20;2822:3;2811:9;2807:19;2800:49;2866:131;2992:4;2866:131;:::i;:::-;2858:139;;3007:81;3083:3;3072:9;3068:19;3059:6;3007:81;:::i;:::-;3136:9;3130:4;3126:20;3120:3;3109:9;3105:19;3098:49;3164:131;3290:4;3164:131;:::i;:::-;3156:139;;3305:82;3382:3;3371:9;3367:19;3358:6;3305:82;:::i;:::-;2162:1232;;;;;;;:::o;3400:169::-;;3518:6;3513:3;3506:19;3558:4;3553:3;3549:14;3534:29;;3496:73;;;;:::o;3575:126::-;;3652:42;3645:5;3641:54;3630:65;;3620:81;;;:::o;3707:77::-;;3773:5;3762:16;;3752:32;;;:::o;3790:134::-;;3881:37;3912:5;3881:37;:::i;:::-;3868:50;;3858:66;;;:::o;3930:122::-;;4022:24;4040:5;4022:24;:::i;:::-;4009:37;;3999:53;;;:::o;4058:126::-;;4141:37;4172:5;4141:37;:::i;:::-;4128:50;;4118:66;;;:::o;4190:113::-;;4273:24;4291:5;4273:24;:::i;:::-;4260:37;;4250:53;;;:::o;288:3583:5:-;;;;;;;", "srcmap-runtime": "288:3583:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3608:261;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:199;;;:::i;:::-;;449:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3608:261;3647:4;3855:5;;;;;;;;;;;3833:28;;:10;:28;;;3826:36;;;;;;;;;;;;3608:261;:::o;2414:199::-;2460:5;;;;;;;;;;:18;;;2500:42;2557:1;2572;2460:123;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:13;:11;:13::i;:::-;;2414:199::o;449:41::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:147::-;515:45;554:5;515:45;:::i;:::-;510:3;503:58;493:74;;:::o;573:109::-;654:21;669:5;654:21;:::i;:::-;649:3;642:34;632:50;;:::o;688:147::-;783:45;822:5;783:45;:::i;:::-;778:3;771:58;761:74;;:::o;841:364::-;;957:39;990:5;957:39;:::i;:::-;1012:71;1076:6;1071:3;1012:71;:::i;:::-;1005:78;;1092:52;1137:6;1132:3;1125:4;1118:5;1114:16;1092:52;:::i;:::-;1169:29;1191:6;1169:29;:::i;:::-;1164:3;1160:39;1153:46;;933:272;;;;;:::o;1211:118::-;1298:24;1316:5;1298:24;:::i;:::-;1293:3;1286:37;1276:53;;:::o;1335:490::-;;1546:2;1535:9;1531:18;1523:26;;1559:79;1635:1;1624:9;1620:17;1611:6;1559:79;:::i;:::-;1648:80;1724:2;1713:9;1709:18;1700:6;1648:80;:::i;:::-;1738;1814:2;1803:9;1799:18;1790:6;1738:80;:::i;:::-;1513:312;;;;;;:::o;1831:210::-;;1956:2;1945:9;1941:18;1933:26;;1969:65;2031:1;2020:9;2016:17;2007:6;1969:65;:::i;:::-;1923:118;;;;:::o;2047:632::-;;2276:3;2265:9;2261:19;2253:27;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2354:78;2427:4;2418:6;2354:78;:::i;:::-;2346:86;;2442:72;2510:2;2499:9;2495:18;2486:6;2442:72;:::i;:::-;2524;2592:2;2581:9;2577:18;2568:6;2524:72;:::i;:::-;2606:66;2668:2;2657:9;2653:18;2644:6;2606:66;:::i;:::-;2243:436;;;;;;;:::o;2685:99::-;;2771:5;2765:12;2755:22;;2744:40;;;:::o;2790:169::-;;2908:6;2903:3;2896:19;2948:4;2943:3;2939:14;2924:29;;2886:73;;;;:::o;2965:96::-;;3031:24;3049:5;3031:24;:::i;:::-;3020:35;;3010:51;;;:::o;3067:90::-;;3144:5;3137:13;3130:21;3119:32;;3109:48;;;:::o;3163:126::-;;3240:42;3233:5;3229:54;3218:65;;3208:81;;;:::o;3295:77::-;;3361:5;3350:16;;3340:32;;;:::o;3378:134::-;;3469:37;3500:5;3469:37;:::i;:::-;3456:50;;3446:66;;;:::o;3518:121::-;;3609:24;3627:5;3609:24;:::i;:::-;3596:37;;3586:53;;;:::o;3645:126::-;;3728:37;3759:5;3728:37;:::i;:::-;3715:50;;3705:66;;;:::o;3777:113::-;;3860:24;3878:5;3860:24;:::i;:::-;3847:37;;3837:53;;;:::o;3896:307::-;3964:1;3974:113;3988:6;3985:1;3982:13;3974:113;;;4073:1;4068:3;4064:11;4058:18;4054:1;4049:3;4045:11;4038:39;4010:2;4007:1;4003:10;3998:15;;3974:113;;;4105:6;4102:1;4099:13;4096:2;;;4185:1;4176:6;4171:3;4167:16;4160:27;4096:2;3945:258;;;;:::o;4209:320::-;;4290:1;4284:4;4280:12;4270:22;;4337:1;4331:4;4327:12;4358:18;4348:2;;4414:4;4406:6;4402:17;4392:27;;4348:2;4476;4468:6;4465:14;4445:18;4442:38;4439:2;;;4495:18;;:::i;:::-;4439:2;4260:269;;;;:::o;4535:180::-;4583:77;4580:1;4573:88;4680:4;4677:1;4670:15;4704:4;4701:1;4694:15;4721:102;;4813:2;4809:7;4804:2;4797:5;4793:14;4789:28;4779:38;;4769:54;;;:::o;4829:122::-;4902:24;4920:5;4902:24;:::i;:::-;4895:5;4892:35;4882:2;;4941:1;4938;4931:12;4882:2;4872:79;:::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPlayer\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_hacked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_updatePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "608060405273b1bd86e80f7a6286f575f7702618330b6cd7151073068a7c2cde82b5db1e5c345fbd07666a7ea8793173e6c93d50b1a3309b5d6b8867e1447c2d9b4dfe9a600a6040516200005390620000c5565b620000629493929190620001fd565b604051809103906000f0801580156200007f573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200032a565b61253a80620008c683390190565b620000de81620002da565b82525050565b620000ef81620002ee565b82525050565b6000620001046003836200029f565b91507f626f6200000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000620001466007836200029f565b91507f636861726c6965000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000620001886005836200029f565b91507f616c6963650000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000620001ca6001836200029f565b91507f31000000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006101008201905081810360008301526200021981620001bb565b90506200022a6020830187620000d3565b81810360408301526200023d8162000179565b90506200024e6060830186620000d3565b81810360808301526200026181620000f5565b90506200027260a0830185620000d3565b81810360c0830152620002858162000137565b90506200029660e0830184620000e4565b95945050505050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620002e78262000302565b9050919050565b6000620002fb82620002d0565b9050919050565b60006200030f8262000316565b9050919050565b60006200032382620002b0565b9050919050565b61058c806200033a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633b36103c146100465780635baca5bd14610064578063e2eb41ff1461006e575b600080fd5b61004e6100a1565b60405161005b9190610387565b60405180910390f35b61006c610129565b005b610088600480360381019061008391906102b2565b6101d8565b60405161009894939291906103a2565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610126577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b90565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ab19a7073b1bd86e80f7a6286f575f7702618330b6cd715106002806040518463ffffffff1660e01b815260040161019b93929190610350565b600060405180830381600087803b1580156101b557600080fd5b505af11580156101c9573d6000803e3d6000fd5b505050506101d56100a1565b50565b60016020528060005260406000206000915090508060000180546101fb906104cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610227906104cd565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b6000813590506102ac8161053f565b92915050565b6000602082840312156102c457600080fd5b60006102d28482850161029d565b91505092915050565b6102e481610452565b82525050565b6102f38161041c565b82525050565b61030281610464565b82525050565b6000610313826103ee565b61031d81856103f9565b935061032d81856020860161049a565b6103368161052e565b840191505092915050565b61034a81610448565b82525050565b600060608201905061036560008301866102db565b61037260208301856102f9565b61037f60408301846102f9565b949350505050565b600060208201905061039c60008301846102ea565b92915050565b600060808201905081810360008301526103bc8187610308565b90506103cb6020830186610341565b6103d86040830185610341565b6103e560608301846102ea565b95945050505050565b600081519050919050565b600082825260208201905092915050565b600061041582610428565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061045d82610476565b9050919050565b600061046f82610448565b9050919050565b600061048182610488565b9050919050565b600061049382610428565b9050919050565b60005b838110156104b857808201518184015260208101905061049d565b838111156104c7576000848401525b50505050565b600060028204905060018216806104e557607f821691505b602082108114156104f9576104f86104ff565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6105488161040a565b811461055357600080fd5b5056fea264697066735822122013fc06e9c51debece020fb8abad726ef08536848b974388685bcc130c19a579264736f6c6343000800003360806040523480156200001157600080fd5b506040516200253a3803806200253a8339818101604052810190620000379190620006a5565b620000576200004b6200042860201b60201c565b6200043060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614158015620000c25750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b8015620000fc5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b80156200010a575060008114155b6200011457600080fd5b87600390805190602001906200012c9291906200052b565b506200013f8682620004f460201b60201c565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906200019c9291906200052b565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050620001e68482620004f460201b60201c565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190620002439291906200052b565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506200028d8282620004f460201b60201c565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190620002ea9291906200052b565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505086600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060028111156200039e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260006101000a81548160ff02191690836002811115620003e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f151802685129c44d0dd1313fc103826047d8aac8add2f9aec41ea52a69f2495d60405160405180910390a150505050505050506200096f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620004fe620005bc565b60405180608001604052808481526020018381526020016000815260200160011515815250905092915050565b8280546200053990620008a7565b90600052602060002090601f0160209004810192826200055d5760008555620005a9565b82601f106200057857805160ff1916838001178555620005a9565b82800160010185558215620005a9579182015b82811115620005a85782518255916020019190600101906200058b565b5b509050620005b89190620005e6565b5090565b60405180608001604052806060815260200160008152602001600081526020016000151581525090565b5b8082111562000601576000816000905550600101620005e7565b5090565b60006200061c620006168462000800565b620007cc565b9050828152602081018484840111156200063557600080fd5b6200064284828562000871565b509392505050565b6000815190506200065b816200093b565b92915050565b600082601f8301126200067357600080fd5b81516200068584826020860162000605565b91505092915050565b6000815190506200069f8162000955565b92915050565b600080600080600080600080610100898b031215620006c357600080fd5b600089015167ffffffffffffffff811115620006de57600080fd5b620006ec8b828c0162000661565b9850506020620006ff8b828c016200064a565b975050604089015167ffffffffffffffff8111156200071d57600080fd5b6200072b8b828c0162000661565b96505060606200073e8b828c016200064a565b955050608089015167ffffffffffffffff8111156200075c57600080fd5b6200076a8b828c0162000661565b94505060a06200077d8b828c016200064a565b93505060c089015167ffffffffffffffff8111156200079b57600080fd5b620007a98b828c0162000661565b92505060e0620007bc8b828c016200068e565b9150509295985092959890939650565b6000604051905081810181811067ffffffffffffffff82111715620007f657620007f56200090c565b5b8060405250919050565b600067ffffffffffffffff8211156200081e576200081d6200090c565b5b601f19601f8301169050602081019050919050565b6000620008408262000847565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200089157808201518184015260208101905062000874565b83811115620008a1576000848401525b50505050565b60006002820490506001821680620008c057607f821691505b60208210811415620008d757620008d6620008dd565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620009468162000833565b81146200095257600080fd5b50565b620009608162000867565b81146200096c57600080fd5b50565b611bbb806200097f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638ab19a70116100a2578063da4f73d011610071578063da4f73d01461024c578063e18d38ce1461027c578063e2eb41ff146102ac578063ed48e8fc146102df578063f2fde38b1461030f5761010b565b80638ab19a70146101ea5780638da5cb5b146102065780638e7ea5b214610224578063d65ab5f2146102425761010b565b80636cbc2ded116100de5780636cbc2ded1461019a578063715018a6146101a45780637b352962146101ae578063878e24a4146101cc5761010b565b806309c95e10146101105780632e547407146101405780633e0881a91461015e5780634529cae71461017c575b600080fd5b61012a60048036038101906101259190611751565b61032b565b6040516101379190611928565b60405180910390f35b610148610481565b6040516101559190611928565b60405180910390f35b610166610542565b6040516101739190611928565b60405180910390f35b610184610604565b6040516101919190611a0c565b60405180910390f35b6101a261060d565b005b6101ac61078f565b005b6101b66107a3565b6040516101c39190611928565b60405180910390f35b6101d4610864565b6040516101e19190611943565b60405180910390f35b61020460048036038101906101ff919061177a565b6108f6565b005b61020e610deb565b60405161021b919061190d565b60405180910390f35b61022c610e14565b604051610239919061190d565b60405180910390f35b61024a610f01565b005b61026660048036038101906102619190611751565b611084565b60405161027391906119f1565b60405180910390f35b61029660048036038101906102919190611751565b6111a1565b6040516102a39190611943565b60405180910390f35b6102c660048036038101906102c19190611751565b6112bf565b6040516102d69493929190611965565b60405180910390f35b6102f960048036038101906102f49190611751565b611384565b60405161030691906119f1565b60405180910390f35b61032960048036038101906103249190611751565b6114a1565b005b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461038890611ace565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490611ace565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050806060015180156104795750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b915050919050565b60008060028111156104bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156104f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff16600281111561053c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905090565b60006001600281111561057e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156105b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff1660028111156105fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905090565b60006003905090565b610615611525565b6001600281111561064f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff1660028111156106cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106d957600080fd5b600280811115610712577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260006101000a81548160ff0219169083600281111561075c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f4860405160405180910390a1565b610797611525565b6107a160006115a3565b565b60006002808111156107de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610816577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff16600281111561085e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905090565b60606003805461087390611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461089f90611ace565b80156108ec5780601f106108c1576101008083540402835291602001916108ec565b820191906000526020600020905b8154815290600101906020018083116108cf57829003601f168201915b5050505050905090565b6108fe611525565b60016002811115610938577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610970577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff1660028111156109b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146109c257600080fd5b3073ffffffffffffffffffffffffffffffffffffffff166309c95e10846040518263ffffffff1660e01b81526004016109fb919061190d565b60206040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b91906117c9565b610a5457600080fd5b6000610a89577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054610ae590611ace565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190611ace565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905080602001518311158015610bb0575080604001518210155b610bb957600080fd5b828160200181815250508181604001818152505080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610c2992919061166f565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600060016000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054610cdf90611ace565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0b90611ace565b8015610d585780601f10610d2d57610100808354040283529160200191610d58565b820191906000526020600020905b815481529060010190602001808311610d3b57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050806040015182604001511115610de45784600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600280811115610e4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610e87577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff166002811115610ecf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610ed957600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f09611525565b60006002811115610f43577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610f7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260009054906101000a900460ff166002811115610fc3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610fcd57600080fd5b60016002811115611007577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260006101000a81548160ff02191690836002811115611051577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507ff863f7481d04a6f279fa8af8d3d3d0ebbe488f4730a3218e1d9b9de19bb812aa60405160405180910390a1565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546110e190611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461110d90611ace565b801561115a5780601f1061112f5761010080835404028352916020019161115a565b820191906000526020600020905b81548152906001019060200180831161113d57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060400151915050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546111ff90611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461122b90611ace565b80156112785780601f1061124d57610100808354040283529160200191611278565b820191906000526020600020905b81548152906001019060200180831161125b57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060000151915050919050565b60016020528060005260406000206000915090508060000180546112e290611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461130e90611ace565b801561135b5780601f106113305761010080835404028352916020019161135b565b820191906000526020600020905b81548152906001019060200180831161133e57829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546113e190611ace565b80601f016020809104026020016040519081016040528092919081815260200182805461140d90611ace565b801561145a5780601f1061142f5761010080835404028352916020019161145a565b820191906000526020600020905b81548152906001019060200180831161143d57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060200151915050919050565b6114a9611525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611519576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611510906119b1565b60405180910390fd5b611522816115a3565b50565b61152d611667565b73ffffffffffffffffffffffffffffffffffffffff1661154b610deb565b73ffffffffffffffffffffffffffffffffffffffff16146115a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611598906119d1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461167b90611ace565b90600052602060002090601f01602090048101928261169d57600085556116e4565b82601f106116b657805160ff19168380011785556116e4565b828001600101855582156116e4579182015b828111156116e35782518255916020019190600101906116c8565b5b5090506116f191906116f5565b5090565b5b8082111561170e5760008160009055506001016116f6565b5090565b60008135905061172181611b40565b92915050565b60008151905061173681611b57565b92915050565b60008135905061174b81611b6e565b92915050565b60006020828403121561176357600080fd5b600061177184828501611712565b91505092915050565b60008060006060848603121561178f57600080fd5b600061179d86828701611712565b93505060206117ae8682870161173c565b92505060406117bf8682870161173c565b9150509250925092565b6000602082840312156117db57600080fd5b60006117e984828501611727565b91505092915050565b6117fb81611a43565b82525050565b61180a81611a55565b82525050565b600061181b82611a27565b6118258185611a32565b9350611835818560208601611a9b565b61183e81611b2f565b840191505092915050565b6000611856602683611a32565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118bc602083611a32565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6118f881611a81565b82525050565b61190781611a8b565b82525050565b600060208201905061192260008301846117f2565b92915050565b600060208201905061193d6000830184611801565b92915050565b6000602082019050818103600083015261195d8184611810565b905092915050565b6000608082019050818103600083015261197f8187611810565b905061198e60208301866118ef565b61199b60408301856118ef565b6119a86060830184611801565b95945050505050565b600060208201905081810360008301526119ca81611849565b9050919050565b600060208201905081810360008301526119ea816118af565b9050919050565b6000602082019050611a0660008301846118ef565b92915050565b6000602082019050611a2160008301846118fe565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a4e82611a61565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b83811015611ab9578082015181840152602081019050611a9e565b83811115611ac8576000848401525b50505050565b60006002820490506001821680611ae657607f821691505b60208210811415611afa57611af9611b00565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611b4981611a43565b8114611b5457600080fd5b50565b611b6081611a55565b8114611b6b57600080fd5b50565b611b7781611a81565b8114611b8257600080fd5b5056fea2646970667358221220412442de53e72a49c93c4f13c72444795306f1ccdd23286240171ce0a729e0fb64736f6c63430008000033", "bin-runtime": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633b36103c146100465780635baca5bd14610064578063e2eb41ff1461006e575b600080fd5b61004e6100a1565b60405161005b9190610387565b60405180910390f35b61006c610129565b005b610088600480360381019061008391906102b2565b6101d8565b60405161009894939291906103a2565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610126577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b90565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ab19a7073b1bd86e80f7a6286f575f7702618330b6cd715106002806040518463ffffffff1660e01b815260040161019b93929190610350565b600060405180830381600087803b1580156101b557600080fd5b505af11580156101c9573d6000803e3d6000fd5b505050506101d56100a1565b50565b60016020528060005260406000206000915090508060000180546101fb906104cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610227906104cd565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b6000813590506102ac8161053f565b92915050565b6000602082840312156102c457600080fd5b60006102d28482850161029d565b91505092915050565b6102e481610452565b82525050565b6102f38161041c565b82525050565b61030281610464565b82525050565b6000610313826103ee565b61031d81856103f9565b935061032d81856020860161049a565b6103368161052e565b840191505092915050565b61034a81610448565b82525050565b600060608201905061036560008301866102db565b61037260208301856102f9565b61037f60408301846102f9565b949350505050565b600060208201905061039c60008301846102ea565b92915050565b600060808201905081810360008301526103bc8187610308565b90506103cb6020830186610341565b6103d86040830185610341565b6103e560608301846102ea565b95945050505050565b600081519050919050565b600082825260208201905092915050565b600061041582610428565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061045d82610476565b9050919050565b600061046f82610448565b9050919050565b600061048182610488565b9050919050565b600061049382610428565b9050919050565b60005b838110156104b857808201518184015260208101905061049d565b838111156104c7576000848401525b50505050565b600060028204905060018216806104e557607f821691505b602082108114156104f9576104f86104ff565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6105488161040a565b811461055357600080fd5b5056fea264697066735822122013fc06e9c51debece020fb8abad726ef08536848b974388685bcc130c19a579264736f6c63430008000033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}